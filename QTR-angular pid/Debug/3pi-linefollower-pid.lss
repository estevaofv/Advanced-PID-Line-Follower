
3pi-linefollower-pid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00001598  0000162c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001598  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000021  0080010e  0080010e  0000163a  2**0
                  ALLOC
  3 .stab         000035c4  00000000  00000000  0000163c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00003d3b  00000000  00000000  00004c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000893b  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000070  00000000  00000000  0000896a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000a1d  00000000  00000000  000089da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000386  00000000  00000000  000093f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000804  00000000  00000000  0000977d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000012c  00000000  00000000  00009f84  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000337  00000000  00000000  0000a0b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000924  00000000  00000000  0000a3e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000068  00000000  00000000  0000ad0b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 40 03 	jmp	0x680	; 0x680 <__vector_9>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e8 e9       	ldi	r30, 0x98	; 152
      7c:	f5 e1       	ldi	r31, 0x15	; 21
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ae 30       	cpi	r26, 0x0E	; 14
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	ae e0       	ldi	r26, 0x0E	; 14
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	af 32       	cpi	r26, 0x2F	; 47
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 31 01 	call	0x262	; 0x262 <main>
      9e:	0c 94 ca 0a 	jmp	0x1594	; 0x1594 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <set_digital_output.constprop.0>:
// setting it as high-impedance (val = 0) or enabling the internal pull-up (val = 1).  If the pin is an
// output, this lets you choose between driving low (val = 0) and driving high (val = 1).
// NOTE: if val is 0xFF (255), this method will toggle the PORT register pin(s).
static inline void set_digital_output_value(struct IOStruct* ioPin, unsigned char val)
{
	if (val == 0xFF)
      a6:	8f 3f       	cpi	r24, 0xFF	; 255
      a8:	29 f4       	brne	.+10     	; 0xb4 <set_digital_output.constprop.0+0xe>
		*(ioPin->portRegister) ^= ioPin->bitmask;
      aa:	85 b1       	in	r24, 0x05	; 5
      ac:	90 e2       	ldi	r25, 0x20	; 32
      ae:	89 27       	eor	r24, r25
      b0:	85 b9       	out	0x05, r24	; 5
      b2:	05 c0       	rjmp	.+10     	; 0xbe <set_digital_output.constprop.0+0x18>
	else if (val)
      b4:	88 23       	and	r24, r24
      b6:	11 f0       	breq	.+4      	; 0xbc <set_digital_output.constprop.0+0x16>
		*(ioPin->portRegister) |= ioPin->bitmask;
      b8:	2d 9a       	sbi	0x05, 5	; 5
      ba:	01 c0       	rjmp	.+2      	; 0xbe <set_digital_output.constprop.0+0x18>
	else
		*(ioPin->portRegister) &= ~ioPin->bitmask;
      bc:	2d 98       	cbi	0x05, 5	; 5
// low-level method for setting the data direction (i.e. input or output) of an pin or set of pins
// described by an IOStruct pointer.
static inline void set_data_direction(struct IOStruct* ioPin, unsigned char val)
{
	if (val)
		*(ioPin->ddrRegister) |= ioPin->bitmask;
      be:	25 9a       	sbi	0x04, 5	; 4
      c0:	08 95       	ret

000000c2 <initialize>:
#include <pololu/OrangutanMotors.h>

// Initializes the 3pi, displays a welcome message, calibrates, and
// plays the initial music.
void initialize()
{
      c2:	0f 93       	push	r16
      c4:	1f 93       	push	r17
      c6:	cf 93       	push	r28
      c8:	df 93       	push	r29
      ca:	cd b7       	in	r28, 0x3d	; 61
      cc:	de b7       	in	r29, 0x3e	; 62
      ce:	28 97       	sbiw	r28, 0x08	; 8
      d0:	0f b6       	in	r0, 0x3f	; 63
      d2:	f8 94       	cli
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	0f be       	out	0x3f, r0	; 63
      d8:	cd bf       	out	0x3d, r28	; 61
	unsigned char qtr_rc_pins[] = {18,19,2,4,7,8,9,10};
      da:	88 e0       	ldi	r24, 0x08	; 8
      dc:	e6 e0       	ldi	r30, 0x06	; 6
      de:	f1 e0       	ldi	r31, 0x01	; 1
      e0:	de 01       	movw	r26, r28
      e2:	11 96       	adiw	r26, 0x01	; 1
      e4:	01 90       	ld	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	8a 95       	dec	r24
      ea:	e1 f7       	brne	.-8      	; 0xe4 <initialize+0x22>
	unsigned int counter; 
	qtr_rc_init(qtr_rc_pins, 8, 2000, 11);
      ec:	2b e0       	ldi	r18, 0x0B	; 11
      ee:	40 ed       	ldi	r20, 0xD0	; 208
      f0:	57 e0       	ldi	r21, 0x07	; 7
      f2:	68 e0       	ldi	r22, 0x08	; 8
      f4:	ce 01       	movw	r24, r28
      f6:	01 96       	adiw	r24, 0x01	; 1
      f8:	0e 94 42 04 	call	0x884	; 0x884 <qtr_rc_init>
	while(!button_is_pressed(BUTTON_B))
      fc:	07 c0       	rjmp	.+14     	; 0x10c <initialize+0x4a>
	{		
		set_digital_output(13,0xff);
      fe:	8f ef       	ldi	r24, 0xFF	; 255
     100:	0e 94 53 00 	call	0xa6	; 0xa6 <set_digital_output.constprop.0>
		delay_ms(200);
     104:	88 ec       	ldi	r24, 0xC8	; 200
     106:	90 e0       	ldi	r25, 0x00	; 0
     108:	0e 94 88 03 	call	0x710	; 0x710 <delay_ms>
void initialize()
{
	unsigned char qtr_rc_pins[] = {18,19,2,4,7,8,9,10};
	unsigned int counter; 
	qtr_rc_init(qtr_rc_pins, 8, 2000, 11);
	while(!button_is_pressed(BUTTON_B))
     10c:	80 e1       	ldi	r24, 0x10	; 16
     10e:	0e 94 35 03 	call	0x66a	; 0x66a <button_is_pressed>
     112:	88 23       	and	r24, r24
     114:	a1 f3       	breq	.-24     	; 0xfe <initialize+0x3c>
	{		
		set_digital_output(13,0xff);
		delay_ms(200);
	}
	wait_for_button_release(BUTTON_B);
     116:	80 e1       	ldi	r24, 0x10	; 16
     118:	0e 94 21 03 	call	0x642	; 0x642 <wait_for_button_release>
	set_digital_output(13,LOW);
     11c:	80 e0       	ldi	r24, 0x00	; 0
     11e:	0e 94 53 00 	call	0xa6	; 0xa6 <set_digital_output.constprop.0>
	delay_ms(1000);
     122:	88 ee       	ldi	r24, 0xE8	; 232
     124:	93 e0       	ldi	r25, 0x03	; 3
     126:	0e 94 88 03 	call	0x710	; 0x710 <delay_ms>
     12a:	0c ee       	ldi	r16, 0xEC	; 236
     12c:	1f ef       	ldi	r17, 0xFF	; 255
	
	for(counter=0;counter<80;counter++)
	{
		if(counter < 20 || counter >= 60)
     12e:	08 32       	cpi	r16, 0x28	; 40
     130:	11 05       	cpc	r17, r1
     132:	28 f0       	brcs	.+10     	; 0x13e <initialize+0x7c>
			set_motors(90,-90);         //**************************************************
     134:	66 ea       	ldi	r22, 0xA6	; 166
     136:	7f ef       	ldi	r23, 0xFF	; 255
     138:	8a e5       	ldi	r24, 0x5A	; 90
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	04 c0       	rjmp	.+8      	; 0x146 <initialize+0x84>
		else
			set_motors(-90,90);
     13e:	6a e5       	ldi	r22, 0x5A	; 90
     140:	70 e0       	ldi	r23, 0x00	; 0
     142:	86 ea       	ldi	r24, 0xA6	; 166
     144:	9f ef       	ldi	r25, 0xFF	; 255
     146:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <set_motors>
		
		set_digital_output(13,HIGH);
     14a:	81 e0       	ldi	r24, 0x01	; 1
     14c:	0e 94 53 00 	call	0xa6	; 0xa6 <set_digital_output.constprop.0>
		qtr_calibrate(QTR_EMITTERS_ON);   //**************************************************
     150:	81 e0       	ldi	r24, 0x01	; 1
     152:	0e 94 c6 08 	call	0x118c	; 0x118c <qtr_calibrate>
		delay_ms(20);
     156:	84 e1       	ldi	r24, 0x14	; 20
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	0e 94 88 03 	call	0x710	; 0x710 <delay_ms>
     15e:	0f 5f       	subi	r16, 0xFF	; 255
     160:	1f 4f       	sbci	r17, 0xFF	; 255
	}
	wait_for_button_release(BUTTON_B);
	set_digital_output(13,LOW);
	delay_ms(1000);
	
	for(counter=0;counter<80;counter++)
     162:	0c 33       	cpi	r16, 0x3C	; 60
     164:	11 05       	cpc	r17, r1
     166:	19 f7       	brne	.-58     	; 0x12e <initialize+0x6c>
		
		set_digital_output(13,HIGH);
		qtr_calibrate(QTR_EMITTERS_ON);   //**************************************************
		delay_ms(20);
	}
	set_digital_output(13,LOW);
     168:	80 e0       	ldi	r24, 0x00	; 0
     16a:	0e 94 53 00 	call	0xa6	; 0xa6 <set_digital_output.constprop.0>
	set_motors(0,0);
     16e:	60 e0       	ldi	r22, 0x00	; 0
     170:	70 e0       	ldi	r23, 0x00	; 0
     172:	80 e0       	ldi	r24, 0x00	; 0
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <set_motors>

	while(!button_is_pressed(BUTTON_B))
     17a:	07 c0       	rjmp	.+14     	; 0x18a <initialize+0xc8>
	{
		set_digital_output(13,0xff);
     17c:	8f ef       	ldi	r24, 0xFF	; 255
     17e:	0e 94 53 00 	call	0xa6	; 0xa6 <set_digital_output.constprop.0>
		delay_ms(200);
     182:	88 ec       	ldi	r24, 0xC8	; 200
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	0e 94 88 03 	call	0x710	; 0x710 <delay_ms>
		delay_ms(20);
	}
	set_digital_output(13,LOW);
	set_motors(0,0);

	while(!button_is_pressed(BUTTON_B))
     18a:	80 e1       	ldi	r24, 0x10	; 16
     18c:	0e 94 35 03 	call	0x66a	; 0x66a <button_is_pressed>
     190:	88 23       	and	r24, r24
     192:	a1 f3       	breq	.-24     	; 0x17c <initialize+0xba>
	{
		set_digital_output(13,0xff);
		delay_ms(200);
	}

	wait_for_button_release(BUTTON_B);
     194:	80 e1       	ldi	r24, 0x10	; 16
     196:	0e 94 21 03 	call	0x642	; 0x642 <wait_for_button_release>
	set_digital_output(13,HIGH);
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	0e 94 53 00 	call	0xa6	; 0xa6 <set_digital_output.constprop.0>
}
     1a0:	28 96       	adiw	r28, 0x08	; 8
     1a2:	0f b6       	in	r0, 0x3f	; 63
     1a4:	f8 94       	cli
     1a6:	de bf       	out	0x3e, r29	; 62
     1a8:	0f be       	out	0x3f, r0	; 63
     1aa:	cd bf       	out	0x3d, r28	; 61
     1ac:	df 91       	pop	r29
     1ae:	cf 91       	pop	r28
     1b0:	1f 91       	pop	r17
     1b2:	0f 91       	pop	r16
     1b4:	08 95       	ret

000001b6 <turn>:
	return 'S';
	
}

void turn(char dir)
{
     1b6:	ef 92       	push	r14
     1b8:	ff 92       	push	r15
     1ba:	0f 93       	push	r16
     1bc:	1f 93       	push	r17
     1be:	cf 93       	push	r28
     1c0:	df 93       	push	r29
     1c2:	cd b7       	in	r28, 0x3d	; 61
     1c4:	de b7       	in	r29, 0x3e	; 62
     1c6:	61 97       	sbiw	r28, 0x11	; 17
     1c8:	0f b6       	in	r0, 0x3f	; 63
     1ca:	f8 94       	cli
     1cc:	de bf       	out	0x3e, r29	; 62
     1ce:	0f be       	out	0x3f, r0	; 63
     1d0:	cd bf       	out	0x3d, r28	; 61
     1d2:	28 2f       	mov	r18, r24
	unsigned int sensors[8];
	unsigned int position = qtr_read_line(sensors,QTR_EMITTERS_ON);
     1d4:	61 e0       	ldi	r22, 0x01	; 1
     1d6:	8e 01       	movw	r16, r28
     1d8:	0f 5f       	subi	r16, 0xFF	; 255
     1da:	1f 4f       	sbci	r17, 0xFF	; 255
     1dc:	c8 01       	movw	r24, r16
     1de:	29 8b       	std	Y+17, r18	; 0x11
     1e0:	0e 94 90 07 	call	0xf20	; 0xf20 <qtr_read_line>
     1e4:	7c 01       	movw	r14, r24
	switch(dir)
     1e6:	29 89       	ldd	r18, Y+17	; 0x11
     1e8:	2c 34       	cpi	r18, 0x4C	; 76
     1ea:	19 f0       	breq	.+6      	; 0x1f2 <turn+0x3c>
     1ec:	22 35       	cpi	r18, 0x52	; 82
     1ee:	61 f5       	brne	.+88     	; 0x248 <turn+0x92>
     1f0:	16 c0       	rjmp	.+44     	; 0x21e <turn+0x68>
	{
	case 'L':
		// Turn left.
		set_motors(-70,70);
     1f2:	66 e4       	ldi	r22, 0x46	; 70
     1f4:	70 e0       	ldi	r23, 0x00	; 0
     1f6:	8a eb       	ldi	r24, 0xBA	; 186
     1f8:	9f ef       	ldi	r25, 0xFF	; 255
     1fa:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <set_motors>
		while(!(position > 3000 && position < 4000))
     1fe:	05 c0       	rjmp	.+10     	; 0x20a <turn+0x54>
		{
			position = qtr_read_line(sensors,QTR_EMITTERS_ON);
     200:	61 e0       	ldi	r22, 0x01	; 1
     202:	c8 01       	movw	r24, r16
     204:	0e 94 90 07 	call	0xf20	; 0xf20 <qtr_read_line>
     208:	7c 01       	movw	r14, r24
	switch(dir)
	{
	case 'L':
		// Turn left.
		set_motors(-70,70);
		while(!(position > 3000 && position < 4000))
     20a:	89 eb       	ldi	r24, 0xB9	; 185
     20c:	e8 1a       	sub	r14, r24
     20e:	8b e0       	ldi	r24, 0x0B	; 11
     210:	f8 0a       	sbc	r15, r24
     212:	87 ee       	ldi	r24, 0xE7	; 231
     214:	e8 16       	cp	r14, r24
     216:	83 e0       	ldi	r24, 0x03	; 3
     218:	f8 06       	cpc	r15, r24
     21a:	90 f7       	brcc	.-28     	; 0x200 <turn+0x4a>
     21c:	15 c0       	rjmp	.+42     	; 0x248 <turn+0x92>
			position = qtr_read_line(sensors,QTR_EMITTERS_ON);
		}
		break;
	case 'R':
		// Turn right.
		set_motors(70,-70);
     21e:	6a eb       	ldi	r22, 0xBA	; 186
     220:	7f ef       	ldi	r23, 0xFF	; 255
     222:	86 e4       	ldi	r24, 0x46	; 70
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <set_motors>
		while(!(position > 3000 && position < 4000))
     22a:	05 c0       	rjmp	.+10     	; 0x236 <turn+0x80>
		{
			position = qtr_read_line(sensors,QTR_EMITTERS_ON);
     22c:	61 e0       	ldi	r22, 0x01	; 1
     22e:	c8 01       	movw	r24, r16
     230:	0e 94 90 07 	call	0xf20	; 0xf20 <qtr_read_line>
     234:	7c 01       	movw	r14, r24
		}
		break;
	case 'R':
		// Turn right.
		set_motors(70,-70);
		while(!(position > 3000 && position < 4000))
     236:	89 eb       	ldi	r24, 0xB9	; 185
     238:	e8 1a       	sub	r14, r24
     23a:	8b e0       	ldi	r24, 0x0B	; 11
     23c:	f8 0a       	sbc	r15, r24
     23e:	87 ee       	ldi	r24, 0xE7	; 231
     240:	e8 16       	cp	r14, r24
     242:	83 e0       	ldi	r24, 0x03	; 3
     244:	f8 06       	cpc	r15, r24
     246:	90 f7       	brcc	.-28     	; 0x22c <turn+0x76>
		break;
	case 'S':
		// Don't do anything!
		break;
	}
}
     248:	61 96       	adiw	r28, 0x11	; 17
     24a:	0f b6       	in	r0, 0x3f	; 63
     24c:	f8 94       	cli
     24e:	de bf       	out	0x3e, r29	; 62
     250:	0f be       	out	0x3f, r0	; 63
     252:	cd bf       	out	0x3d, r28	; 61
     254:	df 91       	pop	r29
     256:	cf 91       	pop	r28
     258:	1f 91       	pop	r17
     25a:	0f 91       	pop	r16
     25c:	ff 90       	pop	r15
     25e:	ef 90       	pop	r14
     260:	08 95       	ret

00000262 <main>:


int main()
{
     262:	cf 93       	push	r28
     264:	df 93       	push	r29
     266:	cd b7       	in	r28, 0x3d	; 61
     268:	de b7       	in	r29, 0x3e	; 62
     26a:	66 97       	sbiw	r28, 0x16	; 22
     26c:	0f b6       	in	r0, 0x3f	; 63
     26e:	f8 94       	cli
     270:	de bf       	out	0x3e, r29	; 62
     272:	0f be       	out	0x3f, r0	; 63
     274:	cd bf       	out	0x3d, r28	; 61
	unsigned int sensors[8]; 
	unsigned int last_proportional=0;
	long integral=0;
	

	initialize();
     276:	0e 94 61 00 	call	0xc2	; 0xc2 <initialize>

int main()
{
	unsigned int sensors[8]; 
	unsigned int last_proportional=0;
	long integral=0;
     27a:	c1 2c       	mov	r12, r1
     27c:	d1 2c       	mov	r13, r1
     27e:	76 01       	movw	r14, r12


int main()
{
	unsigned int sensors[8]; 
	unsigned int last_proportional=0;
     280:	a1 2c       	mov	r10, r1
     282:	b1 2c       	mov	r11, r1
		
		int proportional = ((int)position) - 3500; 
		int derivative = proportional - last_proportional;
		integral += proportional;
		last_proportional = proportional;
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     284:	40 e1       	ldi	r20, 0x10	; 16
     286:	44 2e       	mov	r4, r20
     288:	47 e2       	ldi	r20, 0x27	; 39
     28a:	54 2e       	mov	r5, r20
     28c:	61 2c       	mov	r6, r1
     28e:	71 2c       	mov	r7, r1
     290:	54 e1       	ldi	r21, 0x14	; 20
     292:	85 2e       	mov	r8, r21
     294:	91 2c       	mov	r9, r1
			power_difference = -max;

		if(power_difference < 0)
			set_motors(max+power_difference, max);
		else
			set_motors(max, max-power_difference);
     296:	66 ee       	ldi	r22, 0xE6	; 230
     298:	26 2e       	mov	r2, r22
     29a:	31 2c       	mov	r3, r1
     29c:	01 c0       	rjmp	.+2      	; 0x2a0 <main+0x3e>
	}
}


int main()
{
     29e:	58 01       	movw	r10, r16
	

	while(1)
	{   
				
		set_digital_output(13,HIGH);
     2a0:	81 e0       	ldi	r24, 0x01	; 1
     2a2:	0e 94 53 00 	call	0xa6	; 0xa6 <set_digital_output.constprop.0>
	
		unsigned int position = qtr_read_line(sensors,QTR_EMITTERS_ON);
     2a6:	61 e0       	ldi	r22, 0x01	; 1
     2a8:	ce 01       	movw	r24, r28
     2aa:	01 96       	adiw	r24, 0x01	; 1
     2ac:	0e 94 90 07 	call	0xf20	; 0xf20 <qtr_read_line>
		
		int proportional = ((int)position) - 3500; 
     2b0:	8c 01       	movw	r16, r24
     2b2:	0c 5a       	subi	r16, 0xAC	; 172
     2b4:	1d 40       	sbci	r17, 0x0D	; 13
		int derivative = proportional - last_proportional;
		integral += proportional;
     2b6:	c8 01       	movw	r24, r16
     2b8:	aa 27       	eor	r26, r26
     2ba:	97 fd       	sbrc	r25, 7
     2bc:	a0 95       	com	r26
     2be:	ba 2f       	mov	r27, r26
     2c0:	c8 0e       	add	r12, r24
     2c2:	d9 1e       	adc	r13, r25
     2c4:	ea 1e       	adc	r14, r26
     2c6:	fb 1e       	adc	r15, r27
		last_proportional = proportional;
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     2c8:	c7 01       	movw	r24, r14
     2ca:	b6 01       	movw	r22, r12
     2cc:	a3 01       	movw	r20, r6
     2ce:	92 01       	movw	r18, r4
     2d0:	0e 94 28 09 	call	0x1250	; 0x1250 <__divmodsi4>
     2d4:	29 8b       	std	Y+17, r18	; 0x11
     2d6:	3a 8b       	std	Y+18, r19	; 0x12
     2d8:	4b 8b       	std	Y+19, r20	; 0x13
     2da:	5c 8b       	std	Y+20, r21	; 0x14
     2dc:	c8 01       	movw	r24, r16
     2de:	b4 01       	movw	r22, r8
     2e0:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <__divmodhi4>
     2e4:	89 89       	ldd	r24, Y+17	; 0x11
     2e6:	9a 89       	ldd	r25, Y+18	; 0x12
     2e8:	68 0f       	add	r22, r24
     2ea:	79 1f       	adc	r23, r25
		set_digital_output(13,HIGH);
	
		unsigned int position = qtr_read_line(sensors,QTR_EMITTERS_ON);
		
		int proportional = ((int)position) - 3500; 
		int derivative = proportional - last_proportional;
     2ec:	c8 01       	movw	r24, r16
     2ee:	8a 19       	sub	r24, r10
     2f0:	9b 09       	sbc	r25, r11
		integral += proportional;
		last_proportional = proportional;
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     2f2:	5c 01       	movw	r10, r24
     2f4:	aa 0c       	add	r10, r10
     2f6:	bb 1c       	adc	r11, r11
     2f8:	a8 0e       	add	r10, r24
     2fa:	b9 1e       	adc	r11, r25
     2fc:	b7 fe       	sbrs	r11, 7
     2fe:	03 c0       	rjmp	.+6      	; 0x306 <main+0xa4>
     300:	9f ef       	ldi	r25, 0xFF	; 255
     302:	a9 1a       	sub	r10, r25
     304:	b9 0a       	sbc	r11, r25
     306:	b5 94       	asr	r11
     308:	a7 94       	ror	r10
     30a:	a6 0e       	add	r10, r22
     30c:	b7 1e       	adc	r11, r23
			
		unsigned char found_left=0;
		unsigned char found_straight=0;
		unsigned char found_right=0;

		position = qtr_read_line(sensors,QTR_EMITTERS_ON);
     30e:	61 e0       	ldi	r22, 0x01	; 1
     310:	ce 01       	movw	r24, r28
     312:	01 96       	adiw	r24, 0x01	; 1
     314:	0e 94 90 07 	call	0xf20	; 0xf20 <qtr_read_line>

		// Check for left and right exits.
		if(sensors[0] > 500)
     318:	31 e0       	ldi	r19, 0x01	; 1
     31a:	89 81       	ldd	r24, Y+1	; 0x01
     31c:	9a 81       	ldd	r25, Y+2	; 0x02
     31e:	85 3f       	cpi	r24, 0xF5	; 245
     320:	91 40       	sbci	r25, 0x01	; 1
     322:	08 f4       	brcc	.+2      	; 0x326 <main+0xc4>
     324:	30 e0       	ldi	r19, 0x00	; 0
		{
			found_left = 1;
		}
		if(sensors[7] > 500)
     326:	21 e0       	ldi	r18, 0x01	; 1
     328:	8f 85       	ldd	r24, Y+15	; 0x0f
     32a:	98 89       	ldd	r25, Y+16	; 0x10
     32c:	85 3f       	cpi	r24, 0xF5	; 245
     32e:	91 40       	sbci	r25, 0x01	; 1
     330:	08 f4       	brcc	.+2      	; 0x334 <main+0xd2>
     332:	20 e0       	ldi	r18, 0x00	; 0
		{
			found_right = 1;
		}
		// Check for a straight exit.
		if (found_left || found_right)
     334:	31 11       	cpse	r19, r1
     336:	02 c0       	rjmp	.+4      	; 0x33c <main+0xda>
     338:	22 23       	and	r18, r18
     33a:	71 f0       	breq	.+28     	; 0x358 <main+0xf6>
		{
			set_motors(40,40);
     33c:	68 e2       	ldi	r22, 0x28	; 40
     33e:	70 e0       	ldi	r23, 0x00	; 0
     340:	88 e2       	ldi	r24, 0x28	; 40
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	2d 8b       	std	Y+21, r18	; 0x15
     346:	3e 8b       	std	Y+22, r19	; 0x16
     348:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <set_motors>
			delay_ms(100);
     34c:	84 e6       	ldi	r24, 0x64	; 100
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	0e 94 88 03 	call	0x710	; 0x710 <delay_ms>
     354:	3e 89       	ldd	r19, Y+22	; 0x16
     356:	2d 89       	ldd	r18, Y+21	; 0x15
		}
		position = qtr_read_line(sensors,QTR_EMITTERS_ON);
     358:	61 e0       	ldi	r22, 0x01	; 1
     35a:	ce 01       	movw	r24, r28
     35c:	01 96       	adiw	r24, 0x01	; 1
     35e:	2d 8b       	std	Y+21, r18	; 0x15
     360:	3e 8b       	std	Y+22, r19	; 0x16
     362:	0e 94 90 07 	call	0xf20	; 0xf20 <qtr_read_line>
		if(sensors[0] > 600 && sensors[7] > 600)
     366:	89 81       	ldd	r24, Y+1	; 0x01
     368:	9a 81       	ldd	r25, Y+2	; 0x02
     36a:	2d 89       	ldd	r18, Y+21	; 0x15
     36c:	3e 89       	ldd	r19, Y+22	; 0x16
     36e:	89 35       	cpi	r24, 0x59	; 89
     370:	92 40       	sbci	r25, 0x02	; 2
     372:	28 f0       	brcs	.+10     	; 0x37e <main+0x11c>
     374:	8f 85       	ldd	r24, Y+15	; 0x0f
     376:	98 89       	ldd	r25, Y+16	; 0x10
     378:	89 35       	cpi	r24, 0x59	; 89
     37a:	92 40       	sbci	r25, 0x02	; 2
     37c:	40 f4       	brcc	.+16     	; 0x38e <main+0x12c>
	set_digital_output(13,HIGH);
}

char select_turn(unsigned char found_left, unsigned char found_straight, unsigned char found_right)
{
	if(found_left)
     37e:	31 11       	cpse	r19, r1
     380:	04 c0       	rjmp	.+8      	; 0x38a <main+0x128>
	return 'L';
	else if(found_right)
     382:	22 23       	and	r18, r18
     384:	21 f0       	breq	.+8      	; 0x38e <main+0x12c>
	return 'R';
     386:	82 e5       	ldi	r24, 0x52	; 82
     388:	03 c0       	rjmp	.+6      	; 0x390 <main+0x12e>
}

char select_turn(unsigned char found_left, unsigned char found_straight, unsigned char found_right)
{
	if(found_left)
	return 'L';
     38a:	8c e4       	ldi	r24, 0x4C	; 76
     38c:	01 c0       	rjmp	.+2      	; 0x390 <main+0x12e>
	else if(found_right)
	return 'R';
	else
	return 'S';
     38e:	83 e5       	ldi	r24, 0x53	; 83
			found_right=0;
		}

		unsigned char dir = select_turn(found_left, found_straight, found_right);

		turn(dir);
     390:	0e 94 db 00 	call	0x1b6	; 0x1b6 <turn>
		
		const int max = 230;
		if(power_difference > max)
     394:	87 ee       	ldi	r24, 0xE7	; 231
     396:	a8 16       	cp	r10, r24
     398:	b1 04       	cpc	r11, r1
     39a:	94 f4       	brge	.+36     	; 0x3c0 <main+0x15e>
			power_difference = max;
		if(power_difference < -max)
     39c:	9a e1       	ldi	r25, 0x1A	; 26
     39e:	a9 16       	cp	r10, r25
     3a0:	9f ef       	ldi	r25, 0xFF	; 255
     3a2:	b9 06       	cpc	r11, r25
     3a4:	1c f0       	brlt	.+6      	; 0x3ac <main+0x14a>
			power_difference = -max;

		if(power_difference < 0)
     3a6:	b7 fc       	sbrc	r11, 7
     3a8:	05 c0       	rjmp	.+10     	; 0x3b4 <main+0x152>
     3aa:	0d c0       	rjmp	.+26     	; 0x3c6 <main+0x164>
		
		const int max = 230;
		if(power_difference > max)
			power_difference = max;
		if(power_difference < -max)
			power_difference = -max;
     3ac:	9a e1       	ldi	r25, 0x1A	; 26
     3ae:	a9 2e       	mov	r10, r25
     3b0:	bb 24       	eor	r11, r11
     3b2:	ba 94       	dec	r11

		if(power_difference < 0)
			set_motors(max+power_difference, max);
     3b4:	66 ee       	ldi	r22, 0xE6	; 230
     3b6:	70 e0       	ldi	r23, 0x00	; 0
     3b8:	c5 01       	movw	r24, r10
     3ba:	8a 51       	subi	r24, 0x1A	; 26
     3bc:	9f 4f       	sbci	r25, 0xFF	; 255
     3be:	08 c0       	rjmp	.+16     	; 0x3d0 <main+0x16e>

		turn(dir);
		
		const int max = 230;
		if(power_difference > max)
			power_difference = max;
     3c0:	86 ee       	ldi	r24, 0xE6	; 230
     3c2:	a8 2e       	mov	r10, r24
     3c4:	b1 2c       	mov	r11, r1
			power_difference = -max;

		if(power_difference < 0)
			set_motors(max+power_difference, max);
		else
			set_motors(max, max-power_difference);
     3c6:	b1 01       	movw	r22, r2
     3c8:	6a 19       	sub	r22, r10
     3ca:	7b 09       	sbc	r23, r11
     3cc:	86 ee       	ldi	r24, 0xE6	; 230
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <set_motors>
     3d4:	64 cf       	rjmp	.-312    	; 0x29e <main+0x3c>

000003d6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
     3d6:	fc 01       	movw	r30, r24
     3d8:	11 82       	std	Z+1, r1	; 0x01
     3da:	10 82       	st	Z, r1
     3dc:	13 82       	std	Z+3, r1	; 0x03
     3de:	12 82       	std	Z+2, r1	; 0x02
     3e0:	15 82       	std	Z+5, r1	; 0x05
     3e2:	14 82       	std	Z+4, r1	; 0x04
     3e4:	16 82       	std	Z+6, r1	; 0x06
     3e6:	68 30       	cpi	r22, 0x08	; 8
     3e8:	68 f4       	brcc	.+26     	; 0x404 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
     3ea:	89 e2       	ldi	r24, 0x29	; 41
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	91 83       	std	Z+1, r25	; 0x01
     3f0:	80 83       	st	Z, r24
     3f2:	8b e2       	ldi	r24, 0x2B	; 43
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	93 83       	std	Z+3, r25	; 0x03
     3f8:	82 83       	std	Z+2, r24	; 0x02
     3fa:	8a e2       	ldi	r24, 0x2A	; 42
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	95 83       	std	Z+5, r25	; 0x05
     400:	84 83       	std	Z+4, r24	; 0x04
     402:	11 c0       	rjmp	.+34     	; 0x426 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x50>
     404:	6e 30       	cpi	r22, 0x0E	; 14
     406:	c0 f4       	brcc	.+48     	; 0x438 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x62>
     408:	83 e2       	ldi	r24, 0x23	; 35
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	91 83       	std	Z+1, r25	; 0x01
     40e:	80 83       	st	Z, r24
     410:	85 e2       	ldi	r24, 0x25	; 37
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	93 83       	std	Z+3, r25	; 0x03
     416:	82 83       	std	Z+2, r24	; 0x02
     418:	84 e2       	ldi	r24, 0x24	; 36
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	95 83       	std	Z+5, r25	; 0x05
     41e:	84 83       	std	Z+4, r24	; 0x04
     420:	70 e0       	ldi	r23, 0x00	; 0
     422:	68 50       	subi	r22, 0x08	; 8
     424:	70 40       	sbci	r23, 0x00	; 0
     426:	81 e0       	ldi	r24, 0x01	; 1
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	02 c0       	rjmp	.+4      	; 0x430 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x5a>
     42c:	88 0f       	add	r24, r24
     42e:	99 1f       	adc	r25, r25
     430:	6a 95       	dec	r22
     432:	e2 f7       	brpl	.-8      	; 0x42c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x56>
     434:	86 83       	std	Z+6, r24	; 0x06
     436:	08 95       	ret
     438:	65 31       	cpi	r22, 0x15	; 21
     43a:	b8 f4       	brcc	.+46     	; 0x46a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x94>
     43c:	86 e2       	ldi	r24, 0x26	; 38
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	91 83       	std	Z+1, r25	; 0x01
     442:	80 83       	st	Z, r24
     444:	88 e2       	ldi	r24, 0x28	; 40
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	93 83       	std	Z+3, r25	; 0x03
     44a:	82 83       	std	Z+2, r24	; 0x02
     44c:	87 e2       	ldi	r24, 0x27	; 39
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	95 83       	std	Z+5, r25	; 0x05
     452:	84 83       	std	Z+4, r24	; 0x04
     454:	70 e0       	ldi	r23, 0x00	; 0
     456:	6e 50       	subi	r22, 0x0E	; 14
     458:	70 40       	sbci	r23, 0x00	; 0
     45a:	81 e0       	ldi	r24, 0x01	; 1
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	02 c0       	rjmp	.+4      	; 0x464 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8e>
     460:	88 0f       	add	r24, r24
     462:	99 1f       	adc	r25, r25
     464:	6a 95       	dec	r22
     466:	e2 f7       	brpl	.-8      	; 0x460 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8a>
     468:	86 83       	std	Z+6, r24	; 0x06
     46a:	08 95       	ret

0000046c <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>:
     46c:	fc 01       	movw	r30, r24
     46e:	a4 81       	ldd	r26, Z+4	; 0x04
     470:	b5 81       	ldd	r27, Z+5	; 0x05
     472:	86 81       	ldd	r24, Z+6	; 0x06
     474:	66 23       	and	r22, r22
     476:	21 f0       	breq	.+8      	; 0x480 <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh+0x14>
     478:	9c 91       	ld	r25, X
     47a:	98 2b       	or	r25, r24
     47c:	9c 93       	st	X, r25
     47e:	08 95       	ret
     480:	9c 91       	ld	r25, X
     482:	80 95       	com	r24
     484:	89 23       	and	r24, r25
     486:	8c 93       	st	X, r24
     488:	08 95       	ret

0000048a <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>:
     48a:	fc 01       	movw	r30, r24
     48c:	6f 3f       	cpi	r22, 0xFF	; 255
     48e:	31 f4       	brne	.+12     	; 0x49c <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x12>
     490:	a2 81       	ldd	r26, Z+2	; 0x02
     492:	b3 81       	ldd	r27, Z+3	; 0x03
     494:	8c 91       	ld	r24, X
     496:	96 81       	ldd	r25, Z+6	; 0x06
     498:	89 27       	eor	r24, r25
     49a:	0c c0       	rjmp	.+24     	; 0x4b4 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x2a>
     49c:	a2 81       	ldd	r26, Z+2	; 0x02
     49e:	b3 81       	ldd	r27, Z+3	; 0x03
     4a0:	86 81       	ldd	r24, Z+6	; 0x06
     4a2:	66 23       	and	r22, r22
     4a4:	21 f0       	breq	.+8      	; 0x4ae <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x24>
     4a6:	9c 91       	ld	r25, X
     4a8:	98 2b       	or	r25, r24
     4aa:	9c 93       	st	X, r25
     4ac:	08 95       	ret
     4ae:	9c 91       	ld	r25, X
     4b0:	80 95       	com	r24
     4b2:	89 23       	and	r24, r25
     4b4:	8c 93       	st	X, r24
     4b6:	08 95       	ret

000004b8 <_ZN16OrangutanDigital9setOutputEhh>:
     4b8:	a7 e0       	ldi	r26, 0x07	; 7
     4ba:	b0 e0       	ldi	r27, 0x00	; 0
     4bc:	e2 e6       	ldi	r30, 0x62	; 98
     4be:	f2 e0       	ldi	r31, 0x02	; 2
     4c0:	0c 94 5c 09 	jmp	0x12b8	; 0x12b8 <__prologue_saves__+0x1a>
     4c4:	28 2f       	mov	r18, r24
     4c6:	f6 2e       	mov	r15, r22
     4c8:	8e 01       	movw	r16, r28
     4ca:	0f 5f       	subi	r16, 0xFF	; 255
     4cc:	1f 4f       	sbci	r17, 0xFF	; 255
     4ce:	c8 01       	movw	r24, r16
     4d0:	62 2f       	mov	r22, r18
     4d2:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
     4d6:	c8 01       	movw	r24, r16
     4d8:	6f 2d       	mov	r22, r15
     4da:	0e 94 45 02 	call	0x48a	; 0x48a <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>
     4de:	c8 01       	movw	r24, r16
     4e0:	61 e0       	ldi	r22, 0x01	; 1
     4e2:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>
     4e6:	27 96       	adiw	r28, 0x07	; 7
     4e8:	e5 e0       	ldi	r30, 0x05	; 5
     4ea:	0c 94 78 09 	jmp	0x12f0	; 0x12f0 <__epilogue_restores__+0x1a>

000004ee <_ZN15OrangutanMotors5init2Ev>:
     4ee:	e0 eb       	ldi	r30, 0xB0	; 176
     4f0:	f0 e0       	ldi	r31, 0x00	; 0
     4f2:	83 ef       	ldi	r24, 0xF3	; 243
     4f4:	80 83       	st	Z, r24
     4f6:	80 81       	ld	r24, Z
     4f8:	84 bd       	out	0x24, r24	; 36
     4fa:	e1 eb       	ldi	r30, 0xB1	; 177
     4fc:	f0 e0       	ldi	r31, 0x00	; 0
     4fe:	82 e0       	ldi	r24, 0x02	; 2
     500:	80 83       	st	Z, r24
     502:	80 81       	ld	r24, Z
     504:	85 bd       	out	0x25, r24	; 37
     506:	e4 eb       	ldi	r30, 0xB4	; 180
     508:	f0 e0       	ldi	r31, 0x00	; 0
     50a:	10 82       	st	Z, r1
     50c:	80 81       	ld	r24, Z
     50e:	e3 eb       	ldi	r30, 0xB3	; 179
     510:	f0 e0       	ldi	r31, 0x00	; 0
     512:	80 83       	st	Z, r24
     514:	80 81       	ld	r24, Z
     516:	88 bd       	out	0x28, r24	; 40
     518:	88 b5       	in	r24, 0x28	; 40
     51a:	87 bd       	out	0x27, r24	; 39
     51c:	86 e0       	ldi	r24, 0x06	; 6
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <_ZN16OrangutanDigital9setOutputEhh>
     524:	85 e0       	ldi	r24, 0x05	; 5
     526:	60 e0       	ldi	r22, 0x00	; 0
     528:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <_ZN16OrangutanDigital9setOutputEhh>
     52c:	8b e0       	ldi	r24, 0x0B	; 11
     52e:	60 e0       	ldi	r22, 0x00	; 0
     530:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <_ZN16OrangutanDigital9setOutputEhh>
     534:	83 e0       	ldi	r24, 0x03	; 3
     536:	60 e0       	ldi	r22, 0x00	; 0
     538:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <_ZN16OrangutanDigital9setOutputEhh>
     53c:	08 95       	ret

0000053e <_ZN15OrangutanMotors4initEv>:
     53e:	80 91 0e 01 	lds	r24, 0x010E
     542:	88 23       	and	r24, r24
     544:	29 f4       	brne	.+10     	; 0x550 <_ZN15OrangutanMotors4initEv+0x12>
     546:	81 e0       	ldi	r24, 0x01	; 1
     548:	80 93 0e 01 	sts	0x010E, r24
     54c:	0e 94 77 02 	call	0x4ee	; 0x4ee <_ZN15OrangutanMotors5init2Ev>
     550:	08 95       	ret

00000552 <_ZN15OrangutanMotors10setM1SpeedEi>:
     552:	cf 93       	push	r28
     554:	df 93       	push	r29
     556:	ec 01       	movw	r28, r24
     558:	0e 94 9f 02 	call	0x53e	; 0x53e <_ZN15OrangutanMotors4initEv>
     55c:	d7 ff       	sbrs	r29, 7
     55e:	05 c0       	rjmp	.+10     	; 0x56a <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
     560:	d0 95       	com	r29
     562:	c1 95       	neg	r28
     564:	df 4f       	sbci	r29, 0xFF	; 255
     566:	81 e0       	ldi	r24, 0x01	; 1
     568:	01 c0       	rjmp	.+2      	; 0x56c <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
     56a:	80 e0       	ldi	r24, 0x00	; 0
     56c:	cf 3f       	cpi	r28, 0xFF	; 255
     56e:	d1 05       	cpc	r29, r1
     570:	19 f0       	breq	.+6      	; 0x578 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     572:	14 f0       	brlt	.+4      	; 0x578 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     574:	cf ef       	ldi	r28, 0xFF	; 255
     576:	d0 e0       	ldi	r29, 0x00	; 0
     578:	88 23       	and	r24, r24
     57a:	19 f0       	breq	.+6      	; 0x582 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
     57c:	18 bc       	out	0x28, r1	; 40
     57e:	c7 bd       	out	0x27, r28	; 39
     580:	02 c0       	rjmp	.+4      	; 0x586 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
     582:	c8 bd       	out	0x28, r28	; 40
     584:	17 bc       	out	0x27, r1	; 39
     586:	df 91       	pop	r29
     588:	cf 91       	pop	r28
     58a:	08 95       	ret

0000058c <_ZN15OrangutanMotors10setM2SpeedEi>:
     58c:	cf 93       	push	r28
     58e:	df 93       	push	r29
     590:	ec 01       	movw	r28, r24
     592:	0e 94 9f 02 	call	0x53e	; 0x53e <_ZN15OrangutanMotors4initEv>
     596:	d7 ff       	sbrs	r29, 7
     598:	05 c0       	rjmp	.+10     	; 0x5a4 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
     59a:	d0 95       	com	r29
     59c:	c1 95       	neg	r28
     59e:	df 4f       	sbci	r29, 0xFF	; 255
     5a0:	81 e0       	ldi	r24, 0x01	; 1
     5a2:	01 c0       	rjmp	.+2      	; 0x5a6 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	cf 3f       	cpi	r28, 0xFF	; 255
     5a8:	d1 05       	cpc	r29, r1
     5aa:	19 f0       	breq	.+6      	; 0x5b2 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     5ac:	14 f0       	brlt	.+4      	; 0x5b2 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     5ae:	cf ef       	ldi	r28, 0xFF	; 255
     5b0:	d0 e0       	ldi	r29, 0x00	; 0
     5b2:	88 23       	and	r24, r24
     5b4:	29 f0       	breq	.+10     	; 0x5c0 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
     5b6:	10 92 b4 00 	sts	0x00B4, r1
     5ba:	c0 93 b3 00 	sts	0x00B3, r28
     5be:	04 c0       	rjmp	.+8      	; 0x5c8 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
     5c0:	c0 93 b4 00 	sts	0x00B4, r28
     5c4:	10 92 b3 00 	sts	0x00B3, r1
     5c8:	df 91       	pop	r29
     5ca:	cf 91       	pop	r28
     5cc:	08 95       	ret

000005ce <_ZN15OrangutanMotors9setSpeedsEii>:
     5ce:	cf 93       	push	r28
     5d0:	df 93       	push	r29
     5d2:	eb 01       	movw	r28, r22
     5d4:	0e 94 a9 02 	call	0x552	; 0x552 <_ZN15OrangutanMotors10setM1SpeedEi>
     5d8:	ce 01       	movw	r24, r28
     5da:	0e 94 c6 02 	call	0x58c	; 0x58c <_ZN15OrangutanMotors10setM2SpeedEi>
     5de:	df 91       	pop	r29
     5e0:	cf 91       	pop	r28
     5e2:	08 95       	ret

000005e4 <set_motors>:
     5e4:	0e 94 e7 02 	call	0x5ce	; 0x5ce <_ZN15OrangutanMotors9setSpeedsEii>
     5e8:	08 95       	ret

000005ea <_ZN20OrangutanPushbuttons5init2Ev>:
     5ea:	84 b1       	in	r24, 0x04	; 4
     5ec:	8d 7c       	andi	r24, 0xCD	; 205
     5ee:	84 b9       	out	0x04, r24	; 4
     5f0:	85 b1       	in	r24, 0x05	; 5
     5f2:	82 63       	ori	r24, 0x32	; 50
     5f4:	85 b9       	out	0x05, r24	; 5
     5f6:	85 e0       	ldi	r24, 0x05	; 5
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	6f 93       	push	r22
     5fc:	64 e0       	ldi	r22, 0x04	; 4
     5fe:	6a 95       	dec	r22
     600:	f1 f7       	brne	.-4      	; 0x5fe <_ZN20OrangutanPushbuttons5init2Ev+0x14>
     602:	6f 91       	pop	r22
     604:	01 97       	sbiw	r24, 0x01	; 1
     606:	c9 f7       	brne	.-14     	; 0x5fa <_ZN20OrangutanPushbuttons5init2Ev+0x10>
     608:	08 95       	ret

0000060a <_ZN20OrangutanPushbuttons4initEv>:
     60a:	80 91 0f 01 	lds	r24, 0x010F
     60e:	88 23       	and	r24, r24
     610:	29 f4       	brne	.+10     	; 0x61c <_ZN20OrangutanPushbuttons4initEv+0x12>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	80 93 0f 01 	sts	0x010F, r24
     618:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN20OrangutanPushbuttons5init2Ev>
     61c:	08 95       	ret

0000061e <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
     61e:	1f 93       	push	r17
     620:	18 2f       	mov	r17, r24
     622:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN20OrangutanPushbuttons4initEv>
     626:	83 b1       	in	r24, 0x03	; 3
     628:	81 23       	and	r24, r17
     62a:	e9 f3       	breq	.-6      	; 0x626 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     62c:	8a e0       	ldi	r24, 0x0A	; 10
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	0e 94 88 03 	call	0x710	; 0x710 <delay_ms>
     634:	83 b1       	in	r24, 0x03	; 3
     636:	81 23       	and	r24, r17
     638:	b1 f3       	breq	.-20     	; 0x626 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     63a:	83 b1       	in	r24, 0x03	; 3
     63c:	81 23       	and	r24, r17
     63e:	1f 91       	pop	r17
     640:	08 95       	ret

00000642 <wait_for_button_release>:
     642:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZN20OrangutanPushbuttons14waitForReleaseEh>
     646:	08 95       	ret

00000648 <_ZN20OrangutanPushbuttons9isPressedEh>:
     648:	a1 e0       	ldi	r26, 0x01	; 1
     64a:	b0 e0       	ldi	r27, 0x00	; 0
     64c:	ea e2       	ldi	r30, 0x2A	; 42
     64e:	f3 e0       	ldi	r31, 0x03	; 3
     650:	0c 94 5f 09 	jmp	0x12be	; 0x12be <__prologue_saves__+0x20>
     654:	89 83       	std	Y+1, r24	; 0x01
     656:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN20OrangutanPushbuttons4initEv>
     65a:	93 b1       	in	r25, 0x03	; 3
     65c:	90 95       	com	r25
     65e:	89 81       	ldd	r24, Y+1	; 0x01
     660:	89 23       	and	r24, r25
     662:	21 96       	adiw	r28, 0x01	; 1
     664:	e2 e0       	ldi	r30, 0x02	; 2
     666:	0c 94 7b 09 	jmp	0x12f6	; 0x12f6 <__epilogue_restores__+0x20>

0000066a <button_is_pressed>:
     66a:	0e 94 24 03 	call	0x648	; 0x648 <_ZN20OrangutanPushbuttons9isPressedEh>
     66e:	08 95       	ret

00000670 <_ZN13OrangutanTime17delayMicrosecondsEj>:
     670:	6f 93       	push	r22
     672:	64 e0       	ldi	r22, 0x04	; 4
     674:	6a 95       	dec	r22
     676:	f1 f7       	brne	.-4      	; 0x674 <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
     678:	6f 91       	pop	r22
     67a:	01 97       	sbiw	r24, 0x01	; 1
     67c:	c9 f7       	brne	.-14     	; 0x670 <_ZN13OrangutanTime17delayMicrosecondsEj>
     67e:	08 95       	ret

00000680 <__vector_9>:
     680:	2f 92       	push	r2
     682:	8f 93       	push	r24
     684:	9f 93       	push	r25
     686:	2f b6       	in	r2, 0x3f	; 63
     688:	80 91 1d 01 	lds	r24, 0x011D
     68c:	90 91 1e 01 	lds	r25, 0x011E
     690:	01 96       	adiw	r24, 0x01	; 1
     692:	80 93 1d 01 	sts	0x011D, r24
     696:	90 93 1e 01 	sts	0x011E, r25
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	80 91 1f 01 	lds	r24, 0x011F
     6a0:	89 1f       	adc	r24, r25
     6a2:	80 93 1f 01 	sts	0x011F, r24
     6a6:	90 91 25 01 	lds	r25, 0x0125
     6aa:	9c 5f       	subi	r25, 0xFC	; 252
     6ac:	90 93 25 01 	sts	0x0125, r25
     6b0:	80 91 24 01 	lds	r24, 0x0124
     6b4:	80 51       	subi	r24, 0x10	; 16
     6b6:	97 42       	sbci	r25, 0x27	; 39
     6b8:	c0 f0       	brcs	.+48     	; 0x6ea <end>
     6ba:	90 93 25 01 	sts	0x0125, r25
     6be:	80 93 24 01 	sts	0x0124, r24
     6c2:	80 91 20 01 	lds	r24, 0x0120
     6c6:	90 91 21 01 	lds	r25, 0x0121
     6ca:	01 96       	adiw	r24, 0x01	; 1
     6cc:	80 93 20 01 	sts	0x0120, r24
     6d0:	90 93 21 01 	sts	0x0121, r25
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	80 91 22 01 	lds	r24, 0x0122
     6da:	89 1f       	adc	r24, r25
     6dc:	80 93 22 01 	sts	0x0122, r24
     6e0:	80 91 23 01 	lds	r24, 0x0123
     6e4:	89 1f       	adc	r24, r25
     6e6:	80 93 23 01 	sts	0x0123, r24

000006ea <end>:
     6ea:	2f be       	out	0x3f, r2	; 63
     6ec:	9f 91       	pop	r25
     6ee:	8f 91       	pop	r24
     6f0:	2f 90       	pop	r2
     6f2:	18 95       	reti

000006f4 <_ZN13OrangutanTime17delayMillisecondsEj>:
     6f4:	cf 93       	push	r28
     6f6:	df 93       	push	r29
     6f8:	ec 01       	movw	r28, r24
     6fa:	05 c0       	rjmp	.+10     	; 0x706 <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
     6fc:	88 ee       	ldi	r24, 0xE8	; 232
     6fe:	93 e0       	ldi	r25, 0x03	; 3
     700:	0e 94 38 03 	call	0x670	; 0x670 <_ZN13OrangutanTime17delayMicrosecondsEj>
     704:	21 97       	sbiw	r28, 0x01	; 1
     706:	20 97       	sbiw	r28, 0x00	; 0
     708:	c9 f7       	brne	.-14     	; 0x6fc <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
     70a:	df 91       	pop	r29
     70c:	cf 91       	pop	r28
     70e:	08 95       	ret

00000710 <delay_ms>:
     710:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <_ZN13OrangutanTime17delayMillisecondsEj>
     714:	08 95       	ret

00000716 <delayMicroseconds>:
     716:	6f 93       	push	r22
     718:	64 e0       	ldi	r22, 0x04	; 4
     71a:	6a 95       	dec	r22
     71c:	f1 f7       	brne	.-4      	; 0x71a <delayMicroseconds+0x4>
     71e:	6f 91       	pop	r22
     720:	01 97       	sbiw	r24, 0x01	; 1
     722:	c9 f7       	brne	.-14     	; 0x716 <delayMicroseconds>
     724:	08 95       	ret

00000726 <_ZN16PololuQTRSensors4initEhhh>:
     726:	a7 e0       	ldi	r26, 0x07	; 7
     728:	b0 e0       	ldi	r27, 0x00	; 0
     72a:	e9 e9       	ldi	r30, 0x99	; 153
     72c:	f3 e0       	ldi	r31, 0x03	; 3
     72e:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <__prologue_saves__+0x1c>
     732:	8c 01       	movw	r16, r24
     734:	fc 01       	movw	r30, r24
     736:	11 82       	std	Z+1, r1	; 0x01
     738:	10 82       	st	Z, r1
     73a:	13 82       	std	Z+3, r1	; 0x03
     73c:	12 82       	std	Z+2, r1	; 0x02
     73e:	15 82       	std	Z+5, r1	; 0x05
     740:	14 82       	std	Z+4, r1	; 0x04
     742:	17 82       	std	Z+7, r1	; 0x07
     744:	16 82       	std	Z+6, r1	; 0x06
     746:	61 31       	cpi	r22, 0x11	; 17
     748:	18 f0       	brcs	.+6      	; 0x750 <_ZN16PololuQTRSensors4initEhhh+0x2a>
     74a:	80 e1       	ldi	r24, 0x10	; 16
     74c:	80 87       	std	Z+8, r24	; 0x08
     74e:	02 c0       	rjmp	.+4      	; 0x754 <_ZN16PololuQTRSensors4initEhhh+0x2e>
     750:	fc 01       	movw	r30, r24
     752:	60 87       	std	Z+8, r22	; 0x08
     754:	f8 01       	movw	r30, r16
     756:	20 8b       	std	Z+16, r18	; 0x10
     758:	ce 01       	movw	r24, r28
     75a:	01 96       	adiw	r24, 0x01	; 1
     75c:	64 2f       	mov	r22, r20
     75e:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
     762:	8f 81       	ldd	r24, Y+7	; 0x07
     764:	f8 01       	movw	r30, r16
     766:	81 87       	std	Z+9, r24	; 0x09
     768:	8b 81       	ldd	r24, Y+3	; 0x03
     76a:	9c 81       	ldd	r25, Y+4	; 0x04
     76c:	93 87       	std	Z+11, r25	; 0x0b
     76e:	82 87       	std	Z+10, r24	; 0x0a
     770:	8d 81       	ldd	r24, Y+5	; 0x05
     772:	9e 81       	ldd	r25, Y+6	; 0x06
     774:	95 87       	std	Z+13, r25	; 0x0d
     776:	84 87       	std	Z+12, r24	; 0x0c
     778:	27 96       	adiw	r28, 0x07	; 7
     77a:	e4 e0       	ldi	r30, 0x04	; 4
     77c:	0c 94 79 09 	jmp	0x12f2	; 0x12f2 <__epilogue_restores__+0x1c>

00000780 <_ZN16PololuQTRSensors11emittersOffEv>:
     780:	fc 01       	movw	r30, r24
     782:	a4 85       	ldd	r26, Z+12	; 0x0c
     784:	b5 85       	ldd	r27, Z+13	; 0x0d
     786:	10 97       	sbiw	r26, 0x00	; 0
     788:	79 f0       	breq	.+30     	; 0x7a8 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
     78a:	8c 91       	ld	r24, X
     78c:	91 85       	ldd	r25, Z+9	; 0x09
     78e:	89 2b       	or	r24, r25
     790:	8c 93       	st	X, r24
     792:	a2 85       	ldd	r26, Z+10	; 0x0a
     794:	b3 85       	ldd	r27, Z+11	; 0x0b
     796:	9c 91       	ld	r25, X
     798:	81 85       	ldd	r24, Z+9	; 0x09
     79a:	80 95       	com	r24
     79c:	89 23       	and	r24, r25
     79e:	8c 93       	st	X, r24
     7a0:	88 ec       	ldi	r24, 0xC8	; 200
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	0e 94 8b 03 	call	0x716	; 0x716 <delayMicroseconds>
     7a8:	08 95       	ret

000007aa <_ZN16PololuQTRSensors10emittersOnEv>:
     7aa:	fc 01       	movw	r30, r24
     7ac:	a4 85       	ldd	r26, Z+12	; 0x0c
     7ae:	b5 85       	ldd	r27, Z+13	; 0x0d
     7b0:	10 97       	sbiw	r26, 0x00	; 0
     7b2:	71 f0       	breq	.+28     	; 0x7d0 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
     7b4:	8c 91       	ld	r24, X
     7b6:	91 85       	ldd	r25, Z+9	; 0x09
     7b8:	89 2b       	or	r24, r25
     7ba:	8c 93       	st	X, r24
     7bc:	a2 85       	ldd	r26, Z+10	; 0x0a
     7be:	b3 85       	ldd	r27, Z+11	; 0x0b
     7c0:	8c 91       	ld	r24, X
     7c2:	91 85       	ldd	r25, Z+9	; 0x09
     7c4:	89 2b       	or	r24, r25
     7c6:	8c 93       	st	X, r24
     7c8:	88 ec       	ldi	r24, 0xC8	; 200
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	0e 94 8b 03 	call	0x716	; 0x716 <delayMicroseconds>
     7d0:	08 95       	ret

000007d2 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
     7d2:	a7 e0       	ldi	r26, 0x07	; 7
     7d4:	b0 e0       	ldi	r27, 0x00	; 0
     7d6:	ef ee       	ldi	r30, 0xEF	; 239
     7d8:	f3 e0       	ldi	r31, 0x03	; 3
     7da:	0c 94 4f 09 	jmp	0x129e	; 0x129e <__prologue_saves__>
     7de:	7c 01       	movw	r14, r24
     7e0:	1b 01       	movw	r2, r22
     7e2:	64 2f       	mov	r22, r20
     7e4:	39 01       	movw	r6, r18
     7e6:	40 2f       	mov	r20, r16
     7e8:	20 e0       	ldi	r18, 0x00	; 0
     7ea:	0e 94 93 03 	call	0x726	; 0x726 <_ZN16PololuQTRSensors4initEhhh>
     7ee:	97 01       	movw	r18, r14
     7f0:	2f 5b       	subi	r18, 0xBF	; 191
     7f2:	3f 4f       	sbci	r19, 0xFF	; 255
     7f4:	f9 01       	movw	r30, r18
     7f6:	10 82       	st	Z, r1
     7f8:	d7 01       	movw	r26, r14
     7fa:	ae 5b       	subi	r26, 0xBE	; 190
     7fc:	bf 4f       	sbci	r27, 0xFF	; 255
     7fe:	1c 92       	st	X, r1
     800:	c7 01       	movw	r24, r14
     802:	8d 5b       	subi	r24, 0xBD	; 189
     804:	9f 4f       	sbci	r25, 0xFF	; 255
     806:	fc 01       	movw	r30, r24
     808:	10 82       	st	Z, r1
     80a:	f7 01       	movw	r30, r14
     80c:	77 86       	std	Z+15, r7	; 0x0f
     80e:	66 86       	std	Z+14, r6	; 0x0e
     810:	66 24       	eor	r6, r6
     812:	2e 01       	movw	r4, r28
     814:	08 94       	sec
     816:	41 1c       	adc	r4, r1
     818:	51 1c       	adc	r5, r1
     81a:	6c 01       	movw	r12, r24
     81c:	5d 01       	movw	r10, r26
     81e:	49 01       	movw	r8, r18
     820:	29 c0       	rjmp	.+82     	; 0x874 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
     822:	06 2d       	mov	r16, r6
     824:	10 e0       	ldi	r17, 0x00	; 0
     826:	f1 01       	movw	r30, r2
     828:	e0 0f       	add	r30, r16
     82a:	f1 1f       	adc	r31, r17
     82c:	c2 01       	movw	r24, r4
     82e:	60 81       	ld	r22, Z
     830:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
     834:	2f 81       	ldd	r18, Y+7	; 0x07
     836:	f7 01       	movw	r30, r14
     838:	e0 0f       	add	r30, r16
     83a:	f1 1f       	adc	r31, r17
     83c:	21 8b       	std	Z+17, r18	; 0x11
     83e:	89 81       	ldd	r24, Y+1	; 0x01
     840:	9a 81       	ldd	r25, Y+2	; 0x02
     842:	f8 01       	movw	r30, r16
     844:	ee 0f       	add	r30, r30
     846:	ff 1f       	adc	r31, r31
     848:	ee 0d       	add	r30, r14
     84a:	ff 1d       	adc	r31, r15
     84c:	92 a3       	std	Z+34, r25	; 0x22
     84e:	81 a3       	std	Z+33, r24	; 0x21
     850:	83 32       	cpi	r24, 0x23	; 35
     852:	91 05       	cpc	r25, r1
     854:	11 f4       	brne	.+4      	; 0x85a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
     856:	f4 01       	movw	r30, r8
     858:	09 c0       	rjmp	.+18     	; 0x86c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
     85a:	86 32       	cpi	r24, 0x26	; 38
     85c:	91 05       	cpc	r25, r1
     85e:	11 f4       	brne	.+4      	; 0x864 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
     860:	f5 01       	movw	r30, r10
     862:	04 c0       	rjmp	.+8      	; 0x86c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
     864:	89 32       	cpi	r24, 0x29	; 41
     866:	91 05       	cpc	r25, r1
     868:	21 f4       	brne	.+8      	; 0x872 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa0>
     86a:	f6 01       	movw	r30, r12
     86c:	80 81       	ld	r24, Z
     86e:	82 2b       	or	r24, r18
     870:	80 83       	st	Z, r24
     872:	63 94       	inc	r6
     874:	f7 01       	movw	r30, r14
     876:	80 85       	ldd	r24, Z+8	; 0x08
     878:	68 16       	cp	r6, r24
     87a:	98 f2       	brcs	.-90     	; 0x822 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x50>
     87c:	27 96       	adiw	r28, 0x07	; 7
     87e:	e2 e1       	ldi	r30, 0x12	; 18
     880:	0c 94 6b 09 	jmp	0x12d6	; 0x12d6 <__epilogue_restores__>

00000884 <qtr_rc_init>:
     884:	a0 e0       	ldi	r26, 0x00	; 0
     886:	b0 e0       	ldi	r27, 0x00	; 0
     888:	e8 e4       	ldi	r30, 0x48	; 72
     88a:	f4 e0       	ldi	r31, 0x04	; 4
     88c:	0c 94 57 09 	jmp	0x12ae	; 0x12ae <__prologue_saves__+0x10>
     890:	7c 01       	movw	r14, r24
     892:	16 2f       	mov	r17, r22
     894:	6a 01       	movw	r12, r20
     896:	02 2f       	mov	r16, r18
     898:	84 e4       	ldi	r24, 0x44	; 68
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	0e 94 92 09 	call	0x1324	; 0x1324 <malloc>
     8a0:	a8 2e       	mov	r10, r24
     8a2:	e5 01       	movw	r28, r10
     8a4:	5e 01       	movw	r10, r28
     8a6:	b9 2e       	mov	r11, r25
     8a8:	e5 01       	movw	r28, r10
     8aa:	20 97       	sbiw	r28, 0x00	; 0
     8ac:	61 f0       	breq	.+24     	; 0x8c6 <qtr_rc_init+0x42>
     8ae:	c5 01       	movw	r24, r10
     8b0:	b7 01       	movw	r22, r14
     8b2:	41 2f       	mov	r20, r17
     8b4:	96 01       	movw	r18, r12
     8b6:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <_ZN18PololuQTRSensorsRC4initEPhhjh>
     8ba:	b0 92 2a 01 	sts	0x012A, r11
     8be:	a0 92 29 01 	sts	0x0129, r10
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	01 c0       	rjmp	.+2      	; 0x8c8 <qtr_rc_init+0x44>
     8c6:	80 e0       	ldi	r24, 0x00	; 0
     8c8:	cd b7       	in	r28, 0x3d	; 61
     8ca:	de b7       	in	r29, 0x3e	; 62
     8cc:	ea e0       	ldi	r30, 0x0A	; 10
     8ce:	0c 94 73 09 	jmp	0x12e6	; 0x12e6 <__epilogue_restores__+0x10>

000008d2 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
     8d2:	a0 e0       	ldi	r26, 0x00	; 0
     8d4:	b0 e0       	ldi	r27, 0x00	; 0
     8d6:	ef e6       	ldi	r30, 0x6F	; 111
     8d8:	f4 e0       	ldi	r31, 0x04	; 4
     8da:	0c 94 54 09 	jmp	0x12a8	; 0x12a8 <__prologue_saves__+0xa>
     8de:	ec 01       	movw	r28, r24
     8e0:	5b 01       	movw	r10, r22
     8e2:	fc 01       	movw	r30, r24
     8e4:	ef 5b       	subi	r30, 0xBF	; 191
     8e6:	ff 4f       	sbci	r31, 0xFF	; 255
     8e8:	90 80       	ld	r9, Z
     8ea:	fc 01       	movw	r30, r24
     8ec:	ee 5b       	subi	r30, 0xBE	; 190
     8ee:	ff 4f       	sbci	r31, 0xFF	; 255
     8f0:	80 80       	ld	r8, Z
     8f2:	fc 01       	movw	r30, r24
     8f4:	ed 5b       	subi	r30, 0xBD	; 189
     8f6:	ff 4f       	sbci	r31, 0xFF	; 255
     8f8:	70 80       	ld	r7, Z
     8fa:	80 e0       	ldi	r24, 0x00	; 0
     8fc:	09 c0       	rjmp	.+18     	; 0x910 <__stack+0x11>
     8fe:	e8 2f       	mov	r30, r24
     900:	f0 e0       	ldi	r31, 0x00	; 0
     902:	ee 0f       	add	r30, r30
     904:	ff 1f       	adc	r31, r31
     906:	ea 0d       	add	r30, r10
     908:	fb 1d       	adc	r31, r11
     90a:	11 82       	std	Z+1, r1	; 0x01
     90c:	10 82       	st	Z, r1
     90e:	8f 5f       	subi	r24, 0xFF	; 255
     910:	98 85       	ldd	r25, Y+8	; 0x08
     912:	89 17       	cp	r24, r25
     914:	a0 f3       	brcs	.-24     	; 0x8fe <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x2c>
     916:	84 b1       	in	r24, 0x04	; 4
     918:	21 e4       	ldi	r18, 0x41	; 65
     91a:	e2 2e       	mov	r14, r18
     91c:	f1 2c       	mov	r15, r1
     91e:	ec 0e       	add	r14, r28
     920:	fd 1e       	adc	r15, r29
     922:	d7 01       	movw	r26, r14
     924:	9c 91       	ld	r25, X
     926:	89 2b       	or	r24, r25
     928:	84 b9       	out	0x04, r24	; 4
     92a:	87 b1       	in	r24, 0x07	; 7
     92c:	8e 01       	movw	r16, r28
     92e:	0e 5b       	subi	r16, 0xBE	; 190
     930:	1f 4f       	sbci	r17, 0xFF	; 255
     932:	f8 01       	movw	r30, r16
     934:	90 81       	ld	r25, Z
     936:	89 2b       	or	r24, r25
     938:	87 b9       	out	0x07, r24	; 7
     93a:	8a b1       	in	r24, 0x0a	; 10
     93c:	93 e4       	ldi	r25, 0x43	; 67
     93e:	c9 2e       	mov	r12, r25
     940:	d1 2c       	mov	r13, r1
     942:	cc 0e       	add	r12, r28
     944:	dd 1e       	adc	r13, r29
     946:	d6 01       	movw	r26, r12
     948:	9c 91       	ld	r25, X
     94a:	89 2b       	or	r24, r25
     94c:	8a b9       	out	0x0a, r24	; 10
     94e:	85 b1       	in	r24, 0x05	; 5
     950:	f7 01       	movw	r30, r14
     952:	90 81       	ld	r25, Z
     954:	89 2b       	or	r24, r25
     956:	85 b9       	out	0x05, r24	; 5
     958:	88 b1       	in	r24, 0x08	; 8
     95a:	d8 01       	movw	r26, r16
     95c:	9c 91       	ld	r25, X
     95e:	89 2b       	or	r24, r25
     960:	88 b9       	out	0x08, r24	; 8
     962:	8b b1       	in	r24, 0x0b	; 11
     964:	f6 01       	movw	r30, r12
     966:	90 81       	ld	r25, Z
     968:	89 2b       	or	r24, r25
     96a:	8b b9       	out	0x0b, r24	; 11
     96c:	8a e0       	ldi	r24, 0x0A	; 10
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	0e 94 8b 03 	call	0x716	; 0x716 <delayMicroseconds>
     974:	94 b1       	in	r25, 0x04	; 4
     976:	d7 01       	movw	r26, r14
     978:	8c 91       	ld	r24, X
     97a:	80 95       	com	r24
     97c:	89 23       	and	r24, r25
     97e:	84 b9       	out	0x04, r24	; 4
     980:	97 b1       	in	r25, 0x07	; 7
     982:	f8 01       	movw	r30, r16
     984:	80 81       	ld	r24, Z
     986:	80 95       	com	r24
     988:	89 23       	and	r24, r25
     98a:	87 b9       	out	0x07, r24	; 7
     98c:	9a b1       	in	r25, 0x0a	; 10
     98e:	d6 01       	movw	r26, r12
     990:	8c 91       	ld	r24, X
     992:	80 95       	com	r24
     994:	89 23       	and	r24, r25
     996:	8a b9       	out	0x0a, r24	; 10
     998:	95 b1       	in	r25, 0x05	; 5
     99a:	f7 01       	movw	r30, r14
     99c:	80 81       	ld	r24, Z
     99e:	80 95       	com	r24
     9a0:	89 23       	and	r24, r25
     9a2:	85 b9       	out	0x05, r24	; 5
     9a4:	98 b1       	in	r25, 0x08	; 8
     9a6:	d8 01       	movw	r26, r16
     9a8:	8c 91       	ld	r24, X
     9aa:	80 95       	com	r24
     9ac:	89 23       	and	r24, r25
     9ae:	88 b9       	out	0x08, r24	; 8
     9b0:	9b b1       	in	r25, 0x0b	; 11
     9b2:	f6 01       	movw	r30, r12
     9b4:	80 81       	ld	r24, Z
     9b6:	80 95       	com	r24
     9b8:	89 23       	and	r24, r25
     9ba:	8b b9       	out	0x0b, r24	; 11
     9bc:	c0 90 b0 00 	lds	r12, 0x00B0
     9c0:	e0 90 b1 00 	lds	r14, 0x00B1
     9c4:	80 91 b0 00 	lds	r24, 0x00B0
     9c8:	83 60       	ori	r24, 0x03	; 3
     9ca:	80 93 b0 00 	sts	0x00B0, r24
     9ce:	82 e0       	ldi	r24, 0x02	; 2
     9d0:	80 93 b1 00 	sts	0x00B1, r24
     9d4:	00 91 b2 00 	lds	r16, 0x00B2
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	39 c0       	rjmp	.+114    	; 0xa50 <__stack+0x151>
     9de:	20 91 b2 00 	lds	r18, 0x00B2
     9e2:	20 1b       	sub	r18, r16
     9e4:	82 0f       	add	r24, r18
     9e6:	91 1d       	adc	r25, r1
     9e8:	02 0f       	add	r16, r18
     9ea:	f3 b0       	in	r15, 0x03	; 3
     9ec:	f9 14       	cp	r15, r9
     9ee:	09 f0       	breq	.+2      	; 0x9f2 <__stack+0xf3>
     9f0:	4d c0       	rjmp	.+154    	; 0xa8c <__stack+0x18d>
     9f2:	96 b0       	in	r9, 0x06	; 6
     9f4:	98 14       	cp	r9, r8
     9f6:	09 f0       	breq	.+2      	; 0x9fa <__stack+0xfb>
     9f8:	49 c0       	rjmp	.+146    	; 0xa8c <__stack+0x18d>
     9fa:	29 b1       	in	r18, 0x09	; 9
     9fc:	27 15       	cp	r18, r7
     9fe:	09 f0       	breq	.+2      	; 0xa02 <__stack+0x103>
     a00:	45 c0       	rjmp	.+138    	; 0xa8c <__stack+0x18d>
     a02:	24 c0       	rjmp	.+72     	; 0xa4c <__stack+0x14d>
     a04:	21 2f       	mov	r18, r17
     a06:	30 e0       	ldi	r19, 0x00	; 0
     a08:	a9 01       	movw	r20, r18
     a0a:	44 0f       	add	r20, r20
     a0c:	55 1f       	adc	r21, r21
     a0e:	f5 01       	movw	r30, r10
     a10:	e4 0f       	add	r30, r20
     a12:	f5 1f       	adc	r31, r21
     a14:	60 81       	ld	r22, Z
     a16:	71 81       	ldd	r23, Z+1	; 0x01
     a18:	61 15       	cp	r22, r1
     a1a:	71 05       	cpc	r23, r1
     a1c:	99 f4       	brne	.+38     	; 0xa44 <__stack+0x145>
     a1e:	4c 0f       	add	r20, r28
     a20:	5d 1f       	adc	r21, r29
     a22:	da 01       	movw	r26, r20
     a24:	91 96       	adiw	r26, 0x21	; 33
     a26:	4d 91       	ld	r20, X+
     a28:	5c 91       	ld	r21, X
     a2a:	92 97       	sbiw	r26, 0x22	; 34
     a2c:	da 01       	movw	r26, r20
     a2e:	4c 91       	ld	r20, X
     a30:	2c 0f       	add	r18, r28
     a32:	3d 1f       	adc	r19, r29
     a34:	d9 01       	movw	r26, r18
     a36:	51 96       	adiw	r26, 0x11	; 17
     a38:	2c 91       	ld	r18, X
     a3a:	51 97       	sbiw	r26, 0x11	; 17
     a3c:	42 23       	and	r20, r18
     a3e:	11 f4       	brne	.+4      	; 0xa44 <__stack+0x145>
     a40:	91 83       	std	Z+1, r25	; 0x01
     a42:	80 83       	st	Z, r24
     a44:	1f 5f       	subi	r17, 0xFF	; 255
     a46:	28 85       	ldd	r18, Y+8	; 0x08
     a48:	12 17       	cp	r17, r18
     a4a:	e0 f2       	brcs	.-72     	; 0xa04 <__stack+0x105>
     a4c:	89 2c       	mov	r8, r9
     a4e:	9f 2c       	mov	r9, r15
     a50:	2e 85       	ldd	r18, Y+14	; 0x0e
     a52:	3f 85       	ldd	r19, Y+15	; 0x0f
     a54:	82 17       	cp	r24, r18
     a56:	93 07       	cpc	r25, r19
     a58:	10 f2       	brcs	.-124    	; 0x9de <__stack+0xdf>
     a5a:	c0 92 b0 00 	sts	0x00B0, r12
     a5e:	e0 92 b1 00 	sts	0x00B1, r14
     a62:	20 e0       	ldi	r18, 0x00	; 0
     a64:	0f c0       	rjmp	.+30     	; 0xa84 <__stack+0x185>
     a66:	e2 2f       	mov	r30, r18
     a68:	f0 e0       	ldi	r31, 0x00	; 0
     a6a:	ee 0f       	add	r30, r30
     a6c:	ff 1f       	adc	r31, r31
     a6e:	ea 0d       	add	r30, r10
     a70:	fb 1d       	adc	r31, r11
     a72:	80 81       	ld	r24, Z
     a74:	91 81       	ldd	r25, Z+1	; 0x01
     a76:	00 97       	sbiw	r24, 0x00	; 0
     a78:	21 f4       	brne	.+8      	; 0xa82 <__stack+0x183>
     a7a:	8e 85       	ldd	r24, Y+14	; 0x0e
     a7c:	9f 85       	ldd	r25, Y+15	; 0x0f
     a7e:	91 83       	std	Z+1, r25	; 0x01
     a80:	80 83       	st	Z, r24
     a82:	2f 5f       	subi	r18, 0xFF	; 255
     a84:	88 85       	ldd	r24, Y+8	; 0x08
     a86:	28 17       	cp	r18, r24
     a88:	70 f3       	brcs	.-36     	; 0xa66 <__stack+0x167>
     a8a:	05 c0       	rjmp	.+10     	; 0xa96 <__stack+0x197>
     a8c:	f3 b0       	in	r15, 0x03	; 3
     a8e:	96 b0       	in	r9, 0x06	; 6
     a90:	79 b0       	in	r7, 0x09	; 9
     a92:	10 e0       	ldi	r17, 0x00	; 0
     a94:	d8 cf       	rjmp	.-80     	; 0xa46 <__stack+0x147>
     a96:	cd b7       	in	r28, 0x3d	; 61
     a98:	de b7       	in	r29, 0x3e	; 62
     a9a:	ed e0       	ldi	r30, 0x0D	; 13
     a9c:	0c 94 70 09 	jmp	0x12e0	; 0x12e0 <__epilogue_restores__+0xa>

00000aa0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
     aa0:	ef 92       	push	r14
     aa2:	ff 92       	push	r15
     aa4:	0f 93       	push	r16
     aa6:	1f 93       	push	r17
     aa8:	cf 93       	push	r28
     aaa:	df 93       	push	r29
     aac:	fc 01       	movw	r30, r24
     aae:	9b 01       	movw	r18, r22
     ab0:	00 91 7c 00 	lds	r16, 0x007C
     ab4:	10 91 7a 00 	lds	r17, 0x007A
     ab8:	e7 b0       	in	r14, 0x07	; 7
     aba:	f8 b0       	in	r15, 0x08	; 8
     abc:	80 91 7a 00 	lds	r24, 0x007A
     ac0:	86 fd       	sbrc	r24, 6
     ac2:	fc cf       	rjmp	.-8      	; 0xabc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
     ac4:	80 e0       	ldi	r24, 0x00	; 0
     ac6:	0a c0       	rjmp	.+20     	; 0xadc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3c>
     ac8:	a8 2f       	mov	r26, r24
     aca:	b0 e0       	ldi	r27, 0x00	; 0
     acc:	aa 0f       	add	r26, r26
     ace:	bb 1f       	adc	r27, r27
     ad0:	a2 0f       	add	r26, r18
     ad2:	b3 1f       	adc	r27, r19
     ad4:	11 96       	adiw	r26, 0x01	; 1
     ad6:	1c 92       	st	X, r1
     ad8:	1e 92       	st	-X, r1
     ada:	8f 5f       	subi	r24, 0xFF	; 255
     adc:	90 85       	ldd	r25, Z+8	; 0x08
     ade:	89 17       	cp	r24, r25
     ae0:	98 f3       	brcs	.-26     	; 0xac8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x28>
     ae2:	97 b1       	in	r25, 0x07	; 7
     ae4:	82 a1       	ldd	r24, Z+34	; 0x22
     ae6:	80 95       	com	r24
     ae8:	89 23       	and	r24, r25
     aea:	87 b9       	out	0x07, r24	; 7
     aec:	98 b1       	in	r25, 0x08	; 8
     aee:	82 a1       	ldd	r24, Z+34	; 0x22
     af0:	80 95       	com	r24
     af2:	89 23       	and	r24, r25
     af4:	88 b9       	out	0x08, r24	; 8
     af6:	87 e8       	ldi	r24, 0x87	; 135
     af8:	80 93 7a 00 	sts	0x007A, r24
     afc:	70 e0       	ldi	r23, 0x00	; 0
     afe:	29 c0       	rjmp	.+82     	; 0xb52 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
     b00:	df 01       	movw	r26, r30
     b02:	a6 0f       	add	r26, r22
     b04:	b1 1d       	adc	r27, r1
     b06:	51 96       	adiw	r26, 0x11	; 17
     b08:	8c 91       	ld	r24, X
     b0a:	51 97       	sbiw	r26, 0x11	; 17
     b0c:	80 64       	ori	r24, 0x40	; 64
     b0e:	80 93 7c 00 	sts	0x007C, r24
     b12:	80 91 7a 00 	lds	r24, 0x007A
     b16:	80 64       	ori	r24, 0x40	; 64
     b18:	80 93 7a 00 	sts	0x007A, r24
     b1c:	80 91 7a 00 	lds	r24, 0x007A
     b20:	86 fd       	sbrc	r24, 6
     b22:	fc cf       	rjmp	.-8      	; 0xb1c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x7c>
     b24:	a6 2f       	mov	r26, r22
     b26:	b0 e0       	ldi	r27, 0x00	; 0
     b28:	aa 0f       	add	r26, r26
     b2a:	bb 1f       	adc	r27, r27
     b2c:	a2 0f       	add	r26, r18
     b2e:	b3 1f       	adc	r27, r19
     b30:	40 91 78 00 	lds	r20, 0x0078
     b34:	50 91 79 00 	lds	r21, 0x0079
     b38:	8d 91       	ld	r24, X+
     b3a:	9c 91       	ld	r25, X
     b3c:	11 97       	sbiw	r26, 0x01	; 1
     b3e:	84 0f       	add	r24, r20
     b40:	95 1f       	adc	r25, r21
     b42:	11 96       	adiw	r26, 0x01	; 1
     b44:	9c 93       	st	X, r25
     b46:	8e 93       	st	-X, r24
     b48:	6f 5f       	subi	r22, 0xFF	; 255
     b4a:	80 85       	ldd	r24, Z+8	; 0x08
     b4c:	68 17       	cp	r22, r24
     b4e:	c0 f2       	brcs	.-80     	; 0xb00 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x60>
     b50:	7f 5f       	subi	r23, 0xFF	; 255
     b52:	81 a1       	ldd	r24, Z+33	; 0x21
     b54:	78 17       	cp	r23, r24
     b56:	10 f4       	brcc	.+4      	; 0xb5c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xbc>
     b58:	60 e0       	ldi	r22, 0x00	; 0
     b5a:	f7 cf       	rjmp	.-18     	; 0xb4a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xaa>
     b5c:	40 e0       	ldi	r20, 0x00	; 0
     b5e:	14 c0       	rjmp	.+40     	; 0xb88 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe8>
     b60:	c4 2f       	mov	r28, r20
     b62:	d0 e0       	ldi	r29, 0x00	; 0
     b64:	cc 0f       	add	r28, r28
     b66:	dd 1f       	adc	r29, r29
     b68:	c2 0f       	add	r28, r18
     b6a:	d3 1f       	adc	r29, r19
     b6c:	61 a1       	ldd	r22, Z+33	; 0x21
     b6e:	70 e0       	ldi	r23, 0x00	; 0
     b70:	cb 01       	movw	r24, r22
     b72:	95 95       	asr	r25
     b74:	87 95       	ror	r24
     b76:	a8 81       	ld	r26, Y
     b78:	b9 81       	ldd	r27, Y+1	; 0x01
     b7a:	8a 0f       	add	r24, r26
     b7c:	9b 1f       	adc	r25, r27
     b7e:	0e 94 de 08 	call	0x11bc	; 0x11bc <__udivmodhi4>
     b82:	79 83       	std	Y+1, r23	; 0x01
     b84:	68 83       	st	Y, r22
     b86:	4f 5f       	subi	r20, 0xFF	; 255
     b88:	80 85       	ldd	r24, Z+8	; 0x08
     b8a:	48 17       	cp	r20, r24
     b8c:	48 f3       	brcs	.-46     	; 0xb60 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xc0>
     b8e:	00 93 7c 00 	sts	0x007C, r16
     b92:	10 93 7a 00 	sts	0x007A, r17
     b96:	f8 b8       	out	0x08, r15	; 8
     b98:	e7 b8       	out	0x07, r14	; 7
     b9a:	cd b7       	in	r28, 0x3d	; 61
     b9c:	de b7       	in	r29, 0x3e	; 62
     b9e:	e6 e0       	ldi	r30, 0x06	; 6
     ba0:	0c 94 77 09 	jmp	0x12ee	; 0x12ee <__epilogue_restores__+0x18>

00000ba4 <_ZN16PololuQTRSensors4readEPjh>:
     ba4:	a0 e2       	ldi	r26, 0x20	; 32
     ba6:	b0 e0       	ldi	r27, 0x00	; 0
     ba8:	e8 ed       	ldi	r30, 0xD8	; 216
     baa:	f5 e0       	ldi	r31, 0x05	; 5
     bac:	0c 94 5a 09 	jmp	0x12b4	; 0x12b4 <__prologue_saves__+0x16>
     bb0:	8c 01       	movw	r16, r24
     bb2:	7b 01       	movw	r14, r22
     bb4:	d4 2e       	mov	r13, r20
     bb6:	84 2f       	mov	r24, r20
     bb8:	81 50       	subi	r24, 0x01	; 1
     bba:	82 30       	cpi	r24, 0x02	; 2
     bbc:	18 f4       	brcc	.+6      	; 0xbc4 <_ZN16PololuQTRSensors4readEPjh+0x20>
     bbe:	c8 01       	movw	r24, r16
     bc0:	0e 94 d5 03 	call	0x7aa	; 0x7aa <_ZN16PololuQTRSensors10emittersOnEv>
     bc4:	d8 01       	movw	r26, r16
     bc6:	50 96       	adiw	r26, 0x10	; 16
     bc8:	8c 91       	ld	r24, X
     bca:	50 97       	sbiw	r26, 0x10	; 16
     bcc:	88 23       	and	r24, r24
     bce:	89 f4       	brne	.+34     	; 0xbf2 <_ZN16PololuQTRSensors4readEPjh+0x4e>
     bd0:	c8 01       	movw	r24, r16
     bd2:	b7 01       	movw	r22, r14
     bd4:	0e 94 69 04 	call	0x8d2	; 0x8d2 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
     bd8:	c8 01       	movw	r24, r16
     bda:	0e 94 c0 03 	call	0x780	; 0x780 <_ZN16PololuQTRSensors11emittersOffEv>
     bde:	bd 2d       	mov	r27, r13
     be0:	b2 30       	cpi	r27, 0x02	; 2
     be2:	d9 f5       	brne	.+118    	; 0xc5a <_ZN16PololuQTRSensors4readEPjh+0xb6>
     be4:	c8 01       	movw	r24, r16
     be6:	be 01       	movw	r22, r28
     be8:	6f 5f       	subi	r22, 0xFF	; 255
     bea:	7f 4f       	sbci	r23, 0xFF	; 255
     bec:	0e 94 69 04 	call	0x8d2	; 0x8d2 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
     bf0:	10 c0       	rjmp	.+32     	; 0xc12 <_ZN16PololuQTRSensors4readEPjh+0x6e>
     bf2:	c8 01       	movw	r24, r16
     bf4:	b7 01       	movw	r22, r14
     bf6:	0e 94 50 05 	call	0xaa0	; 0xaa0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
     bfa:	c8 01       	movw	r24, r16
     bfc:	0e 94 c0 03 	call	0x780	; 0x780 <_ZN16PololuQTRSensors11emittersOffEv>
     c00:	ed 2d       	mov	r30, r13
     c02:	e2 30       	cpi	r30, 0x02	; 2
     c04:	51 f5       	brne	.+84     	; 0xc5a <_ZN16PololuQTRSensors4readEPjh+0xb6>
     c06:	c8 01       	movw	r24, r16
     c08:	be 01       	movw	r22, r28
     c0a:	6f 5f       	subi	r22, 0xFF	; 255
     c0c:	7f 4f       	sbci	r23, 0xFF	; 255
     c0e:	0e 94 50 05 	call	0xaa0	; 0xaa0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
     c12:	60 e0       	ldi	r22, 0x00	; 0
     c14:	ae 01       	movw	r20, r28
     c16:	4f 5f       	subi	r20, 0xFF	; 255
     c18:	5f 4f       	sbci	r21, 0xFF	; 255
     c1a:	1b c0       	rjmp	.+54     	; 0xc52 <_ZN16PololuQTRSensors4readEPjh+0xae>
     c1c:	86 2f       	mov	r24, r22
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	88 0f       	add	r24, r24
     c22:	99 1f       	adc	r25, r25
     c24:	f7 01       	movw	r30, r14
     c26:	e8 0f       	add	r30, r24
     c28:	f9 1f       	adc	r31, r25
     c2a:	84 0f       	add	r24, r20
     c2c:	95 1f       	adc	r25, r21
     c2e:	d8 01       	movw	r26, r16
     c30:	1e 96       	adiw	r26, 0x0e	; 14
     c32:	2d 91       	ld	r18, X+
     c34:	3c 91       	ld	r19, X
     c36:	1f 97       	sbiw	r26, 0x0f	; 15
     c38:	dc 01       	movw	r26, r24
     c3a:	8d 91       	ld	r24, X+
     c3c:	9c 91       	ld	r25, X
     c3e:	11 97       	sbiw	r26, 0x01	; 1
     c40:	28 1b       	sub	r18, r24
     c42:	39 0b       	sbc	r19, r25
     c44:	80 81       	ld	r24, Z
     c46:	91 81       	ldd	r25, Z+1	; 0x01
     c48:	82 0f       	add	r24, r18
     c4a:	93 1f       	adc	r25, r19
     c4c:	91 83       	std	Z+1, r25	; 0x01
     c4e:	80 83       	st	Z, r24
     c50:	6f 5f       	subi	r22, 0xFF	; 255
     c52:	f8 01       	movw	r30, r16
     c54:	80 85       	ldd	r24, Z+8	; 0x08
     c56:	68 17       	cp	r22, r24
     c58:	08 f3       	brcs	.-62     	; 0xc1c <_ZN16PololuQTRSensors4readEPjh+0x78>
     c5a:	a0 96       	adiw	r28, 0x20	; 32
     c5c:	e7 e0       	ldi	r30, 0x07	; 7
     c5e:	0c 94 76 09 	jmp	0x12ec	; 0x12ec <__epilogue_restores__+0x16>

00000c62 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
     c62:	8f 92       	push	r8
     c64:	9f 92       	push	r9
     c66:	af 92       	push	r10
     c68:	bf 92       	push	r11
     c6a:	cf 92       	push	r12
     c6c:	df 92       	push	r13
     c6e:	ff 92       	push	r15
     c70:	0f 93       	push	r16
     c72:	1f 93       	push	r17
     c74:	cf 93       	push	r28
     c76:	df 93       	push	r29
     c78:	ec 01       	movw	r28, r24
     c7a:	c6 2e       	mov	r12, r22
     c7c:	07 2f       	mov	r16, r23
     c7e:	f4 2e       	mov	r15, r20
     c80:	42 30       	cpi	r20, 0x02	; 2
     c82:	11 f0       	breq	.+4      	; 0xc88 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x26>
     c84:	ff 20       	and	r15, r15
     c86:	51 f4       	brne	.+20     	; 0xc9c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
     c88:	8c 81       	ldd	r24, Y+4	; 0x04
     c8a:	9d 81       	ldd	r25, Y+5	; 0x05
     c8c:	00 97       	sbiw	r24, 0x00	; 0
     c8e:	09 f4       	brne	.+2      	; 0xc92 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x30>
     c90:	a0 c0       	rjmp	.+320    	; 0xdd2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
     c92:	8e 81       	ldd	r24, Y+6	; 0x06
     c94:	9f 81       	ldd	r25, Y+7	; 0x07
     c96:	00 97       	sbiw	r24, 0x00	; 0
     c98:	09 f4       	brne	.+2      	; 0xc9c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
     c9a:	9b c0       	rjmp	.+310    	; 0xdd2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
     c9c:	8f 2d       	mov	r24, r15
     c9e:	81 50       	subi	r24, 0x01	; 1
     ca0:	82 30       	cpi	r24, 0x02	; 2
     ca2:	50 f4       	brcc	.+20     	; 0xcb8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
     ca4:	88 81       	ld	r24, Y
     ca6:	99 81       	ldd	r25, Y+1	; 0x01
     ca8:	00 97       	sbiw	r24, 0x00	; 0
     caa:	09 f4       	brne	.+2      	; 0xcae <_ZN16PololuQTRSensors14readCalibratedEPjh+0x4c>
     cac:	92 c0       	rjmp	.+292    	; 0xdd2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
     cae:	8a 81       	ldd	r24, Y+2	; 0x02
     cb0:	9b 81       	ldd	r25, Y+3	; 0x03
     cb2:	00 97       	sbiw	r24, 0x00	; 0
     cb4:	09 f4       	brne	.+2      	; 0xcb8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
     cb6:	8d c0       	rjmp	.+282    	; 0xdd2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
     cb8:	ce 01       	movw	r24, r28
     cba:	6c 2d       	mov	r22, r12
     cbc:	70 2f       	mov	r23, r16
     cbe:	4f 2d       	mov	r20, r15
     cc0:	0e 94 d2 05 	call	0xba4	; 0xba4 <_ZN16PololuQTRSensors4readEPjh>
     cc4:	ac 2c       	mov	r10, r12
     cc6:	b0 2e       	mov	r11, r16
     cc8:	00 e0       	ldi	r16, 0x00	; 0
     cca:	10 e0       	ldi	r17, 0x00	; 0
     ccc:	88 24       	eor	r8, r8
     cce:	99 24       	eor	r9, r9
     cd0:	7a c0       	rjmp	.+244    	; 0xdc6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x164>
     cd2:	8f 2d       	mov	r24, r15
     cd4:	81 30       	cpi	r24, 0x01	; 1
     cd6:	59 f4       	brne	.+22     	; 0xcee <_ZN16PololuQTRSensors14readCalibratedEPjh+0x8c>
     cd8:	ea 81       	ldd	r30, Y+2	; 0x02
     cda:	fb 81       	ldd	r31, Y+3	; 0x03
     cdc:	e0 0f       	add	r30, r16
     cde:	f1 1f       	adc	r31, r17
     ce0:	c0 80       	ld	r12, Z
     ce2:	d1 80       	ldd	r13, Z+1	; 0x01
     ce4:	e8 81       	ld	r30, Y
     ce6:	f9 81       	ldd	r31, Y+1	; 0x01
     ce8:	e0 0f       	add	r30, r16
     cea:	f1 1f       	adc	r31, r17
     cec:	0d c0       	rjmp	.+26     	; 0xd08 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
     cee:	8c 81       	ldd	r24, Y+4	; 0x04
     cf0:	9d 81       	ldd	r25, Y+5	; 0x05
     cf2:	ff 20       	and	r15, r15
     cf4:	61 f4       	brne	.+24     	; 0xd0e <_ZN16PololuQTRSensors14readCalibratedEPjh+0xac>
     cf6:	ee 81       	ldd	r30, Y+6	; 0x06
     cf8:	ff 81       	ldd	r31, Y+7	; 0x07
     cfa:	e0 0f       	add	r30, r16
     cfc:	f1 1f       	adc	r31, r17
     cfe:	c0 80       	ld	r12, Z
     d00:	d1 80       	ldd	r13, Z+1	; 0x01
     d02:	80 0f       	add	r24, r16
     d04:	91 1f       	adc	r25, r17
     d06:	fc 01       	movw	r30, r24
     d08:	40 81       	ld	r20, Z
     d0a:	51 81       	ldd	r21, Z+1	; 0x01
     d0c:	2b c0       	rjmp	.+86     	; 0xd64 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
     d0e:	80 0f       	add	r24, r16
     d10:	91 1f       	adc	r25, r17
     d12:	fc 01       	movw	r30, r24
     d14:	80 81       	ld	r24, Z
     d16:	91 81       	ldd	r25, Z+1	; 0x01
     d18:	e8 81       	ld	r30, Y
     d1a:	f9 81       	ldd	r31, Y+1	; 0x01
     d1c:	e0 0f       	add	r30, r16
     d1e:	f1 1f       	adc	r31, r17
     d20:	40 81       	ld	r20, Z
     d22:	51 81       	ldd	r21, Z+1	; 0x01
     d24:	ce 84       	ldd	r12, Y+14	; 0x0e
     d26:	df 84       	ldd	r13, Y+15	; 0x0f
     d28:	84 17       	cp	r24, r20
     d2a:	95 07       	cpc	r25, r21
     d2c:	10 f4       	brcc	.+4      	; 0xd32 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd0>
     d2e:	a6 01       	movw	r20, r12
     d30:	04 c0       	rjmp	.+8      	; 0xd3a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd8>
     d32:	4c 0d       	add	r20, r12
     d34:	5d 1d       	adc	r21, r13
     d36:	48 1b       	sub	r20, r24
     d38:	59 0b       	sbc	r21, r25
     d3a:	ee 81       	ldd	r30, Y+6	; 0x06
     d3c:	ff 81       	ldd	r31, Y+7	; 0x07
     d3e:	e0 0f       	add	r30, r16
     d40:	f1 1f       	adc	r31, r17
     d42:	80 81       	ld	r24, Z
     d44:	91 81       	ldd	r25, Z+1	; 0x01
     d46:	ea 81       	ldd	r30, Y+2	; 0x02
     d48:	fb 81       	ldd	r31, Y+3	; 0x03
     d4a:	e0 0f       	add	r30, r16
     d4c:	f1 1f       	adc	r31, r17
     d4e:	20 81       	ld	r18, Z
     d50:	31 81       	ldd	r19, Z+1	; 0x01
     d52:	ce 84       	ldd	r12, Y+14	; 0x0e
     d54:	df 84       	ldd	r13, Y+15	; 0x0f
     d56:	82 17       	cp	r24, r18
     d58:	93 07       	cpc	r25, r19
     d5a:	20 f0       	brcs	.+8      	; 0xd64 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
     d5c:	c2 0e       	add	r12, r18
     d5e:	d3 1e       	adc	r13, r19
     d60:	c8 1a       	sub	r12, r24
     d62:	d9 0a       	sbc	r13, r25
     d64:	c4 1a       	sub	r12, r20
     d66:	d5 0a       	sbc	r13, r21
     d68:	d1 f0       	breq	.+52     	; 0xd9e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
     d6a:	f5 01       	movw	r30, r10
     d6c:	60 81       	ld	r22, Z
     d6e:	71 81       	ldd	r23, Z+1	; 0x01
     d70:	80 e0       	ldi	r24, 0x00	; 0
     d72:	90 e0       	ldi	r25, 0x00	; 0
     d74:	9a 01       	movw	r18, r20
     d76:	40 e0       	ldi	r20, 0x00	; 0
     d78:	50 e0       	ldi	r21, 0x00	; 0
     d7a:	62 1b       	sub	r22, r18
     d7c:	73 0b       	sbc	r23, r19
     d7e:	84 0b       	sbc	r24, r20
     d80:	95 0b       	sbc	r25, r21
     d82:	28 ee       	ldi	r18, 0xE8	; 232
     d84:	33 e0       	ldi	r19, 0x03	; 3
     d86:	40 e0       	ldi	r20, 0x00	; 0
     d88:	50 e0       	ldi	r21, 0x00	; 0
     d8a:	0e 94 ce 08 	call	0x119c	; 0x119c <__mulsi3>
     d8e:	96 01       	movw	r18, r12
     d90:	40 e0       	ldi	r20, 0x00	; 0
     d92:	50 e0       	ldi	r21, 0x00	; 0
     d94:	0e 94 28 09 	call	0x1250	; 0x1250 <__divmodsi4>
     d98:	37 fd       	sbrc	r19, 7
     d9a:	0a c0       	rjmp	.+20     	; 0xdb0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x14e>
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x140>
     d9e:	20 e0       	ldi	r18, 0x00	; 0
     da0:	30 e0       	ldi	r19, 0x00	; 0
     da2:	f3 e0       	ldi	r31, 0x03	; 3
     da4:	29 3e       	cpi	r18, 0xE9	; 233
     da6:	3f 07       	cpc	r19, r31
     da8:	2c f0       	brlt	.+10     	; 0xdb4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
     daa:	28 ee       	ldi	r18, 0xE8	; 232
     dac:	33 e0       	ldi	r19, 0x03	; 3
     dae:	02 c0       	rjmp	.+4      	; 0xdb4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
     db0:	20 e0       	ldi	r18, 0x00	; 0
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	f5 01       	movw	r30, r10
     db6:	21 93       	st	Z+, r18
     db8:	31 93       	st	Z+, r19
     dba:	5f 01       	movw	r10, r30
     dbc:	08 94       	sec
     dbe:	81 1c       	adc	r8, r1
     dc0:	91 1c       	adc	r9, r1
     dc2:	0e 5f       	subi	r16, 0xFE	; 254
     dc4:	1f 4f       	sbci	r17, 0xFF	; 255
     dc6:	88 85       	ldd	r24, Y+8	; 0x08
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	88 16       	cp	r8, r24
     dcc:	99 06       	cpc	r9, r25
     dce:	0c f4       	brge	.+2      	; 0xdd2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
     dd0:	80 cf       	rjmp	.-256    	; 0xcd2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x70>
     dd2:	df 91       	pop	r29
     dd4:	cf 91       	pop	r28
     dd6:	1f 91       	pop	r17
     dd8:	0f 91       	pop	r16
     dda:	ff 90       	pop	r15
     ddc:	df 90       	pop	r13
     dde:	cf 90       	pop	r12
     de0:	bf 90       	pop	r11
     de2:	af 90       	pop	r10
     de4:	9f 90       	pop	r9
     de6:	8f 90       	pop	r8
     de8:	08 95       	ret

00000dea <_ZN16PololuQTRSensors8readLineEPjhh>:
     dea:	a5 e0       	ldi	r26, 0x05	; 5
     dec:	b0 e0       	ldi	r27, 0x00	; 0
     dee:	eb ef       	ldi	r30, 0xFB	; 251
     df0:	f6 e0       	ldi	r31, 0x06	; 6
     df2:	0c 94 4f 09 	jmp	0x129e	; 0x129e <__prologue_saves__>
     df6:	4c 01       	movw	r8, r24
     df8:	c6 2e       	mov	r12, r22
     dfa:	e7 2e       	mov	r14, r23
     dfc:	2d 83       	std	Y+5, r18	; 0x05
     dfe:	0e 94 31 06 	call	0xc62	; 0xc62 <_ZN16PololuQTRSensors14readCalibratedEPjh>
     e02:	d4 01       	movw	r26, r8
     e04:	18 96       	adiw	r26, 0x08	; 8
     e06:	4c 90       	ld	r4, X
     e08:	18 97       	sbiw	r26, 0x08	; 8
     e0a:	de 2c       	mov	r13, r14
     e0c:	64 2d       	mov	r22, r4
     e0e:	70 e0       	ldi	r23, 0x00	; 0
     e10:	80 e0       	ldi	r24, 0x00	; 0
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	28 ee       	ldi	r18, 0xE8	; 232
     e16:	33 e0       	ldi	r19, 0x03	; 3
     e18:	40 e0       	ldi	r20, 0x00	; 0
     e1a:	50 e0       	ldi	r21, 0x00	; 0
     e1c:	0e 94 ce 08 	call	0x119c	; 0x119c <__mulsi3>
     e20:	69 83       	std	Y+1, r22	; 0x01
     e22:	7a 83       	std	Y+2, r23	; 0x02
     e24:	8b 83       	std	Y+3, r24	; 0x03
     e26:	9c 83       	std	Y+4, r25	; 0x04
     e28:	ee 24       	eor	r14, r14
     e2a:	ff 24       	eor	r15, r15
     e2c:	87 01       	movw	r16, r14
     e2e:	66 24       	eor	r6, r6
     e30:	77 24       	eor	r7, r7
     e32:	88 24       	eor	r8, r8
     e34:	99 24       	eor	r9, r9
     e36:	54 01       	movw	r10, r8
     e38:	55 24       	eor	r5, r5
     e3a:	36 c0       	rjmp	.+108    	; 0xea8 <_ZN16PololuQTRSensors8readLineEPjhh+0xbe>
     e3c:	f6 01       	movw	r30, r12
     e3e:	30 81       	ld	r19, Z
     e40:	21 81       	ldd	r18, Z+1	; 0x01
     e42:	42 e0       	ldi	r20, 0x02	; 2
     e44:	24 2e       	mov	r2, r20
     e46:	31 2c       	mov	r3, r1
     e48:	c2 0c       	add	r12, r2
     e4a:	d3 1c       	adc	r13, r3
     e4c:	c9 01       	movw	r24, r18
     e4e:	49 2f       	mov	r20, r25
     e50:	58 2f       	mov	r21, r24
     e52:	1a 01       	movw	r2, r20
     e54:	2d 81       	ldd	r18, Y+5	; 0x05
     e56:	22 23       	and	r18, r18
     e58:	29 f0       	breq	.+10     	; 0xe64 <_ZN16PololuQTRSensors8readLineEPjhh+0x7a>
     e5a:	88 ee       	ldi	r24, 0xE8	; 232
     e5c:	93 e0       	ldi	r25, 0x03	; 3
     e5e:	82 19       	sub	r24, r2
     e60:	93 09       	sbc	r25, r3
     e62:	1c 01       	movw	r2, r24
     e64:	99 ec       	ldi	r25, 0xC9	; 201
     e66:	29 16       	cp	r2, r25
     e68:	31 04       	cpc	r3, r1
     e6a:	2c f4       	brge	.+10     	; 0xe76 <_ZN16PololuQTRSensors8readLineEPjhh+0x8c>
     e6c:	a3 e3       	ldi	r26, 0x33	; 51
     e6e:	2a 16       	cp	r2, r26
     e70:	31 04       	cpc	r3, r1
     e72:	94 f0       	brlt	.+36     	; 0xe98 <_ZN16PololuQTRSensors8readLineEPjhh+0xae>
     e74:	02 c0       	rjmp	.+4      	; 0xe7a <_ZN16PololuQTRSensors8readLineEPjhh+0x90>
     e76:	55 24       	eor	r5, r5
     e78:	53 94       	inc	r5
     e7a:	b1 01       	movw	r22, r2
     e7c:	88 27       	eor	r24, r24
     e7e:	77 fd       	sbrc	r23, 7
     e80:	80 95       	com	r24
     e82:	98 2f       	mov	r25, r24
     e84:	a8 01       	movw	r20, r16
     e86:	97 01       	movw	r18, r14
     e88:	0e 94 ce 08 	call	0x119c	; 0x119c <__mulsi3>
     e8c:	86 0e       	add	r8, r22
     e8e:	97 1e       	adc	r9, r23
     e90:	a8 1e       	adc	r10, r24
     e92:	b9 1e       	adc	r11, r25
     e94:	62 0c       	add	r6, r2
     e96:	73 1c       	adc	r7, r3
     e98:	88 ee       	ldi	r24, 0xE8	; 232
     e9a:	93 e0       	ldi	r25, 0x03	; 3
     e9c:	a0 e0       	ldi	r26, 0x00	; 0
     e9e:	b0 e0       	ldi	r27, 0x00	; 0
     ea0:	e8 0e       	add	r14, r24
     ea2:	f9 1e       	adc	r15, r25
     ea4:	0a 1f       	adc	r16, r26
     ea6:	1b 1f       	adc	r17, r27
     ea8:	89 81       	ldd	r24, Y+1	; 0x01
     eaa:	9a 81       	ldd	r25, Y+2	; 0x02
     eac:	ab 81       	ldd	r26, Y+3	; 0x03
     eae:	bc 81       	ldd	r27, Y+4	; 0x04
     eb0:	e8 16       	cp	r14, r24
     eb2:	f9 06       	cpc	r15, r25
     eb4:	0a 07       	cpc	r16, r26
     eb6:	1b 07       	cpc	r17, r27
     eb8:	09 f6       	brne	.-126    	; 0xe3c <_ZN16PololuQTRSensors8readLineEPjhh+0x52>
     eba:	55 20       	and	r5, r5
     ebc:	f1 f4       	brne	.+60     	; 0xefa <_ZN16PololuQTRSensors8readLineEPjhh+0x110>
     ebe:	55 24       	eor	r5, r5
     ec0:	08 94       	sec
     ec2:	41 08       	sbc	r4, r1
     ec4:	51 08       	sbc	r5, r1
     ec6:	24 ef       	ldi	r18, 0xF4	; 244
     ec8:	31 e0       	ldi	r19, 0x01	; 1
     eca:	42 9e       	mul	r4, r18
     ecc:	c0 01       	movw	r24, r0
     ece:	43 9e       	mul	r4, r19
     ed0:	90 0d       	add	r25, r0
     ed2:	52 9e       	mul	r5, r18
     ed4:	90 0d       	add	r25, r0
     ed6:	11 24       	eor	r1, r1
     ed8:	20 91 27 01 	lds	r18, 0x0127
     edc:	30 91 28 01 	lds	r19, 0x0128
     ee0:	28 17       	cp	r18, r24
     ee2:	39 07       	cpc	r19, r25
     ee4:	b4 f0       	brlt	.+44     	; 0xf12 <_ZN16PololuQTRSensors8readLineEPjhh+0x128>
     ee6:	88 ee       	ldi	r24, 0xE8	; 232
     ee8:	93 e0       	ldi	r25, 0x03	; 3
     eea:	48 9e       	mul	r4, r24
     eec:	90 01       	movw	r18, r0
     eee:	49 9e       	mul	r4, r25
     ef0:	30 0d       	add	r19, r0
     ef2:	58 9e       	mul	r5, r24
     ef4:	30 0d       	add	r19, r0
     ef6:	11 24       	eor	r1, r1
     ef8:	0e c0       	rjmp	.+28     	; 0xf16 <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
     efa:	93 01       	movw	r18, r6
     efc:	40 e0       	ldi	r20, 0x00	; 0
     efe:	50 e0       	ldi	r21, 0x00	; 0
     f00:	c5 01       	movw	r24, r10
     f02:	b4 01       	movw	r22, r8
     f04:	0e 94 06 09 	call	0x120c	; 0x120c <__udivmodsi4>
     f08:	20 93 27 01 	sts	0x0127, r18
     f0c:	30 93 28 01 	sts	0x0128, r19
     f10:	02 c0       	rjmp	.+4      	; 0xf16 <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
     f12:	20 e0       	ldi	r18, 0x00	; 0
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	c9 01       	movw	r24, r18
     f18:	25 96       	adiw	r28, 0x05	; 5
     f1a:	e2 e1       	ldi	r30, 0x12	; 18
     f1c:	0c 94 6b 09 	jmp	0x12d6	; 0x12d6 <__epilogue_restores__>

00000f20 <qtr_read_line>:
     f20:	9c 01       	movw	r18, r24
     f22:	46 2f       	mov	r20, r22
     f24:	80 91 29 01 	lds	r24, 0x0129
     f28:	90 91 2a 01 	lds	r25, 0x012A
     f2c:	b9 01       	movw	r22, r18
     f2e:	20 e0       	ldi	r18, 0x00	; 0
     f30:	0e 94 f5 06 	call	0xdea	; 0xdea <_ZN16PololuQTRSensors8readLineEPjhh>
     f34:	08 95       	ret

00000f36 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
     f36:	a7 e6       	ldi	r26, 0x67	; 103
     f38:	b0 e0       	ldi	r27, 0x00	; 0
     f3a:	e1 ea       	ldi	r30, 0xA1	; 161
     f3c:	f7 e0       	ldi	r31, 0x07	; 7
     f3e:	0c 94 4f 09 	jmp	0x129e	; 0x129e <__prologue_saves__>
     f42:	8c 01       	movw	r16, r24
     f44:	4b 01       	movw	r8, r22
     f46:	6a 01       	movw	r12, r20
     f48:	a6 96       	adiw	r28, 0x26	; 38
     f4a:	2f af       	std	Y+63, r18	; 0x3f
     f4c:	a6 97       	sbiw	r28, 0x26	; 38
     f4e:	da 01       	movw	r26, r20
     f50:	8d 91       	ld	r24, X+
     f52:	9c 91       	ld	r25, X
     f54:	11 97       	sbiw	r26, 0x01	; 1
     f56:	00 97       	sbiw	r24, 0x00	; 0
     f58:	e9 f4       	brne	.+58     	; 0xf94 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x5e>
     f5a:	f8 01       	movw	r30, r16
     f5c:	80 85       	ldd	r24, Z+8	; 0x08
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	88 0f       	add	r24, r24
     f62:	99 1f       	adc	r25, r25
     f64:	0e 94 92 09 	call	0x1324	; 0x1324 <malloc>
     f68:	d6 01       	movw	r26, r12
     f6a:	11 96       	adiw	r26, 0x01	; 1
     f6c:	9c 93       	st	X, r25
     f6e:	8e 93       	st	-X, r24
     f70:	00 97       	sbiw	r24, 0x00	; 0
     f72:	09 f4       	brne	.+2      	; 0xf76 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x40>
     f74:	e2 c0       	rjmp	.+452    	; 0x113a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
     f76:	fc 01       	movw	r30, r24
     f78:	80 e0       	ldi	r24, 0x00	; 0
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	03 c0       	rjmp	.+6      	; 0xf84 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x4e>
     f7e:	11 92       	st	Z+, r1
     f80:	11 92       	st	Z+, r1
     f82:	01 96       	adiw	r24, 0x01	; 1
     f84:	d8 01       	movw	r26, r16
     f86:	18 96       	adiw	r26, 0x08	; 8
     f88:	2c 91       	ld	r18, X
     f8a:	18 97       	sbiw	r26, 0x08	; 8
     f8c:	30 e0       	ldi	r19, 0x00	; 0
     f8e:	82 17       	cp	r24, r18
     f90:	93 07       	cpc	r25, r19
     f92:	ac f3       	brlt	.-22     	; 0xf7e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x48>
     f94:	f4 01       	movw	r30, r8
     f96:	80 81       	ld	r24, Z
     f98:	91 81       	ldd	r25, Z+1	; 0x01
     f9a:	00 97       	sbiw	r24, 0x00	; 0
     f9c:	89 f0       	breq	.+34     	; 0xfc0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8a>
     f9e:	ee 24       	eor	r14, r14
     fa0:	ff 24       	eor	r15, r15
     fa2:	5e 01       	movw	r10, r28
     fa4:	08 94       	sec
     fa6:	a1 1c       	adc	r10, r1
     fa8:	b1 1c       	adc	r11, r1
     faa:	b1 e4       	ldi	r27, 0x41	; 65
     fac:	6b 2e       	mov	r6, r27
     fae:	71 2c       	mov	r7, r1
     fb0:	6c 0e       	add	r6, r28
     fb2:	7d 1e       	adc	r7, r29
     fb4:	a1 e2       	ldi	r26, 0x21	; 33
     fb6:	4a 2e       	mov	r4, r26
     fb8:	51 2c       	mov	r5, r1
     fba:	4c 0e       	add	r4, r28
     fbc:	5d 1e       	adc	r5, r29
     fbe:	23 c0       	rjmp	.+70     	; 0x1006 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
     fc0:	d8 01       	movw	r26, r16
     fc2:	18 96       	adiw	r26, 0x08	; 8
     fc4:	8c 91       	ld	r24, X
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	88 0f       	add	r24, r24
     fca:	99 1f       	adc	r25, r25
     fcc:	0e 94 92 09 	call	0x1324	; 0x1324 <malloc>
     fd0:	f4 01       	movw	r30, r8
     fd2:	91 83       	std	Z+1, r25	; 0x01
     fd4:	80 83       	st	Z, r24
     fd6:	00 97       	sbiw	r24, 0x00	; 0
     fd8:	09 f4       	brne	.+2      	; 0xfdc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xa6>
     fda:	af c0       	rjmp	.+350    	; 0x113a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
     fdc:	fc 01       	movw	r30, r24
     fde:	80 e0       	ldi	r24, 0x00	; 0
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	d8 01       	movw	r26, r16
     fe4:	07 c0       	rjmp	.+14     	; 0xff4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xbe>
     fe6:	1e 96       	adiw	r26, 0x0e	; 14
     fe8:	2d 91       	ld	r18, X+
     fea:	3c 91       	ld	r19, X
     fec:	1f 97       	sbiw	r26, 0x0f	; 15
     fee:	21 93       	st	Z+, r18
     ff0:	31 93       	st	Z+, r19
     ff2:	01 96       	adiw	r24, 0x01	; 1
     ff4:	18 96       	adiw	r26, 0x08	; 8
     ff6:	2c 91       	ld	r18, X
     ff8:	18 97       	sbiw	r26, 0x08	; 8
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	82 17       	cp	r24, r18
     ffe:	93 07       	cpc	r25, r19
    1000:	94 f3       	brlt	.-28     	; 0xfe6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb0>
    1002:	8d 01       	movw	r16, r26
    1004:	cc cf       	rjmp	.-104    	; 0xf9e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x68>
    1006:	c8 01       	movw	r24, r16
    1008:	b5 01       	movw	r22, r10
    100a:	a6 96       	adiw	r28, 0x26	; 38
    100c:	4f ad       	ldd	r20, Y+63	; 0x3f
    100e:	a6 97       	sbiw	r28, 0x26	; 38
    1010:	0e 94 d2 05 	call	0xba4	; 0xba4 <_ZN16PololuQTRSensors4readEPjh>
    1014:	d8 01       	movw	r26, r16
    1016:	18 96       	adiw	r26, 0x08	; 8
    1018:	8c 91       	ld	r24, X
    101a:	18 97       	sbiw	r26, 0x08	; 8
    101c:	e8 2f       	mov	r30, r24
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	a5 96       	adiw	r28, 0x25	; 37
    1022:	ff af       	std	Y+63, r31	; 0x3f
    1024:	ee af       	std	Y+62, r30	; 0x3e
    1026:	a5 97       	sbiw	r28, 0x25	; 37
    1028:	13 01       	movw	r2, r6
    102a:	f5 01       	movw	r30, r10
    102c:	a3 96       	adiw	r28, 0x23	; 35
    102e:	5f ae       	std	Y+63, r5	; 0x3f
    1030:	4e ae       	std	Y+62, r4	; 0x3e
    1032:	a3 97       	sbiw	r28, 0x23	; 35
    1034:	93 01       	movw	r18, r6
    1036:	40 e0       	ldi	r20, 0x00	; 0
    1038:	50 e0       	ldi	r21, 0x00	; 0
    103a:	a8 96       	adiw	r28, 0x28	; 40
    103c:	5f ae       	std	Y+63, r5	; 0x3f
    103e:	4e ae       	std	Y+62, r4	; 0x3e
    1040:	a8 97       	sbiw	r28, 0x28	; 40
    1042:	37 c0       	rjmp	.+110    	; 0x10b2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17c>
    1044:	e1 14       	cp	r14, r1
    1046:	f1 04       	cpc	r15, r1
    1048:	61 f0       	breq	.+24     	; 0x1062 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x12c>
    104a:	a8 96       	adiw	r28, 0x28	; 40
    104c:	ae ad       	ldd	r26, Y+62	; 0x3e
    104e:	bf ad       	ldd	r27, Y+63	; 0x3f
    1050:	a8 97       	sbiw	r28, 0x28	; 40
    1052:	6d 91       	ld	r22, X+
    1054:	7c 91       	ld	r23, X
    1056:	11 97       	sbiw	r26, 0x01	; 1
    1058:	80 81       	ld	r24, Z
    105a:	91 81       	ldd	r25, Z+1	; 0x01
    105c:	68 17       	cp	r22, r24
    105e:	79 07       	cpc	r23, r25
    1060:	60 f4       	brcc	.+24     	; 0x107a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x144>
    1062:	80 81       	ld	r24, Z
    1064:	91 81       	ldd	r25, Z+1	; 0x01
    1066:	a8 96       	adiw	r28, 0x28	; 40
    1068:	ae ad       	ldd	r26, Y+62	; 0x3e
    106a:	bf ad       	ldd	r27, Y+63	; 0x3f
    106c:	a8 97       	sbiw	r28, 0x28	; 40
    106e:	11 96       	adiw	r26, 0x01	; 1
    1070:	9c 93       	st	X, r25
    1072:	8e 93       	st	-X, r24
    1074:	e1 14       	cp	r14, r1
    1076:	f1 04       	cpc	r15, r1
    1078:	49 f0       	breq	.+18     	; 0x108c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x156>
    107a:	d9 01       	movw	r26, r18
    107c:	6d 91       	ld	r22, X+
    107e:	7c 91       	ld	r23, X
    1080:	11 97       	sbiw	r26, 0x01	; 1
    1082:	80 81       	ld	r24, Z
    1084:	91 81       	ldd	r25, Z+1	; 0x01
    1086:	86 17       	cp	r24, r22
    1088:	97 07       	cpc	r25, r23
    108a:	28 f4       	brcc	.+10     	; 0x1096 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x160>
    108c:	80 81       	ld	r24, Z
    108e:	91 81       	ldd	r25, Z+1	; 0x01
    1090:	d9 01       	movw	r26, r18
    1092:	8d 93       	st	X+, r24
    1094:	9c 93       	st	X, r25
    1096:	4f 5f       	subi	r20, 0xFF	; 255
    1098:	5f 4f       	sbci	r21, 0xFF	; 255
    109a:	2e 5f       	subi	r18, 0xFE	; 254
    109c:	3f 4f       	sbci	r19, 0xFF	; 255
    109e:	32 96       	adiw	r30, 0x02	; 2
    10a0:	a8 96       	adiw	r28, 0x28	; 40
    10a2:	8e ad       	ldd	r24, Y+62	; 0x3e
    10a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    10a6:	a8 97       	sbiw	r28, 0x28	; 40
    10a8:	02 96       	adiw	r24, 0x02	; 2
    10aa:	a8 96       	adiw	r28, 0x28	; 40
    10ac:	9f af       	std	Y+63, r25	; 0x3f
    10ae:	8e af       	std	Y+62, r24	; 0x3e
    10b0:	a8 97       	sbiw	r28, 0x28	; 40
    10b2:	a5 96       	adiw	r28, 0x25	; 37
    10b4:	ae ad       	ldd	r26, Y+62	; 0x3e
    10b6:	bf ad       	ldd	r27, Y+63	; 0x3f
    10b8:	a5 97       	sbiw	r28, 0x25	; 37
    10ba:	4a 17       	cp	r20, r26
    10bc:	5b 07       	cpc	r21, r27
    10be:	14 f2       	brlt	.-124    	; 0x1044 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x10e>
    10c0:	08 94       	sec
    10c2:	e1 1c       	adc	r14, r1
    10c4:	f1 1c       	adc	r15, r1
    10c6:	ba e0       	ldi	r27, 0x0A	; 10
    10c8:	eb 16       	cp	r14, r27
    10ca:	f1 04       	cpc	r15, r1
    10cc:	09 f0       	breq	.+2      	; 0x10d0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x19a>
    10ce:	9b cf       	rjmp	.-202    	; 0x1006 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    10d0:	80 e0       	ldi	r24, 0x00	; 0
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	2c c0       	rjmp	.+88     	; 0x112e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f8>
    10d6:	f1 01       	movw	r30, r2
    10d8:	41 91       	ld	r20, Z+
    10da:	51 91       	ld	r21, Z+
    10dc:	1f 01       	movw	r2, r30
    10de:	bc 01       	movw	r22, r24
    10e0:	66 0f       	add	r22, r22
    10e2:	77 1f       	adc	r23, r23
    10e4:	d6 01       	movw	r26, r12
    10e6:	ed 91       	ld	r30, X+
    10e8:	fc 91       	ld	r31, X
    10ea:	11 97       	sbiw	r26, 0x01	; 1
    10ec:	e6 0f       	add	r30, r22
    10ee:	f7 1f       	adc	r31, r23
    10f0:	20 81       	ld	r18, Z
    10f2:	31 81       	ldd	r19, Z+1	; 0x01
    10f4:	24 17       	cp	r18, r20
    10f6:	35 07       	cpc	r19, r21
    10f8:	10 f4       	brcc	.+4      	; 0x10fe <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1c8>
    10fa:	51 83       	std	Z+1, r21	; 0x01
    10fc:	40 83       	st	Z, r20
    10fe:	a3 96       	adiw	r28, 0x23	; 35
    1100:	ee ad       	ldd	r30, Y+62	; 0x3e
    1102:	ff ad       	ldd	r31, Y+63	; 0x3f
    1104:	a3 97       	sbiw	r28, 0x23	; 35
    1106:	41 91       	ld	r20, Z+
    1108:	51 91       	ld	r21, Z+
    110a:	a3 96       	adiw	r28, 0x23	; 35
    110c:	ff af       	std	Y+63, r31	; 0x3f
    110e:	ee af       	std	Y+62, r30	; 0x3e
    1110:	a3 97       	sbiw	r28, 0x23	; 35
    1112:	d4 01       	movw	r26, r8
    1114:	ed 91       	ld	r30, X+
    1116:	fc 91       	ld	r31, X
    1118:	11 97       	sbiw	r26, 0x01	; 1
    111a:	e6 0f       	add	r30, r22
    111c:	f7 1f       	adc	r31, r23
    111e:	20 81       	ld	r18, Z
    1120:	31 81       	ldd	r19, Z+1	; 0x01
    1122:	42 17       	cp	r20, r18
    1124:	53 07       	cpc	r21, r19
    1126:	10 f4       	brcc	.+4      	; 0x112c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f6>
    1128:	51 83       	std	Z+1, r21	; 0x01
    112a:	40 83       	st	Z, r20
    112c:	01 96       	adiw	r24, 0x01	; 1
    112e:	f8 01       	movw	r30, r16
    1130:	20 85       	ldd	r18, Z+8	; 0x08
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	82 17       	cp	r24, r18
    1136:	93 07       	cpc	r25, r19
    1138:	74 f2       	brlt	.-100    	; 0x10d6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1a0>
    113a:	c9 59       	subi	r28, 0x99	; 153
    113c:	df 4f       	sbci	r29, 0xFF	; 255
    113e:	e2 e1       	ldi	r30, 0x12	; 18
    1140:	0c 94 6b 09 	jmp	0x12d6	; 0x12d6 <__epilogue_restores__>

00001144 <_ZN16PololuQTRSensors9calibrateEh>:
    1144:	1f 93       	push	r17
    1146:	cf 93       	push	r28
    1148:	df 93       	push	r29
    114a:	ec 01       	movw	r28, r24
    114c:	16 2f       	mov	r17, r22
    114e:	86 2f       	mov	r24, r22
    1150:	81 50       	subi	r24, 0x01	; 1
    1152:	82 30       	cpi	r24, 0x02	; 2
    1154:	58 f4       	brcc	.+22     	; 0x116c <_ZN16PololuQTRSensors9calibrateEh+0x28>
    1156:	ae 01       	movw	r20, r28
    1158:	4e 5f       	subi	r20, 0xFE	; 254
    115a:	5f 4f       	sbci	r21, 0xFF	; 255
    115c:	ce 01       	movw	r24, r28
    115e:	be 01       	movw	r22, r28
    1160:	21 e0       	ldi	r18, 0x01	; 1
    1162:	0e 94 9b 07 	call	0xf36	; 0xf36 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1166:	12 30       	cpi	r17, 0x02	; 2
    1168:	19 f0       	breq	.+6      	; 0x1170 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    116a:	0c c0       	rjmp	.+24     	; 0x1184 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    116c:	66 23       	and	r22, r22
    116e:	51 f4       	brne	.+20     	; 0x1184 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1170:	be 01       	movw	r22, r28
    1172:	6c 5f       	subi	r22, 0xFC	; 252
    1174:	7f 4f       	sbci	r23, 0xFF	; 255
    1176:	ae 01       	movw	r20, r28
    1178:	4a 5f       	subi	r20, 0xFA	; 250
    117a:	5f 4f       	sbci	r21, 0xFF	; 255
    117c:	ce 01       	movw	r24, r28
    117e:	20 e0       	ldi	r18, 0x00	; 0
    1180:	0e 94 9b 07 	call	0xf36	; 0xf36 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1184:	df 91       	pop	r29
    1186:	cf 91       	pop	r28
    1188:	1f 91       	pop	r17
    118a:	08 95       	ret

0000118c <qtr_calibrate>:
    118c:	68 2f       	mov	r22, r24
    118e:	80 91 29 01 	lds	r24, 0x0129
    1192:	90 91 2a 01 	lds	r25, 0x012A
    1196:	0e 94 a2 08 	call	0x1144	; 0x1144 <_ZN16PololuQTRSensors9calibrateEh>
    119a:	08 95       	ret

0000119c <__mulsi3>:
    119c:	db 01       	movw	r26, r22
    119e:	8f 93       	push	r24
    11a0:	9f 93       	push	r25
    11a2:	0e 94 44 09 	call	0x1288	; 0x1288 <__muluhisi3>
    11a6:	bf 91       	pop	r27
    11a8:	af 91       	pop	r26
    11aa:	a2 9f       	mul	r26, r18
    11ac:	80 0d       	add	r24, r0
    11ae:	91 1d       	adc	r25, r1
    11b0:	a3 9f       	mul	r26, r19
    11b2:	90 0d       	add	r25, r0
    11b4:	b2 9f       	mul	r27, r18
    11b6:	90 0d       	add	r25, r0
    11b8:	11 24       	eor	r1, r1
    11ba:	08 95       	ret

000011bc <__udivmodhi4>:
    11bc:	aa 1b       	sub	r26, r26
    11be:	bb 1b       	sub	r27, r27
    11c0:	51 e1       	ldi	r21, 0x11	; 17
    11c2:	07 c0       	rjmp	.+14     	; 0x11d2 <__udivmodhi4_ep>

000011c4 <__udivmodhi4_loop>:
    11c4:	aa 1f       	adc	r26, r26
    11c6:	bb 1f       	adc	r27, r27
    11c8:	a6 17       	cp	r26, r22
    11ca:	b7 07       	cpc	r27, r23
    11cc:	10 f0       	brcs	.+4      	; 0x11d2 <__udivmodhi4_ep>
    11ce:	a6 1b       	sub	r26, r22
    11d0:	b7 0b       	sbc	r27, r23

000011d2 <__udivmodhi4_ep>:
    11d2:	88 1f       	adc	r24, r24
    11d4:	99 1f       	adc	r25, r25
    11d6:	5a 95       	dec	r21
    11d8:	a9 f7       	brne	.-22     	; 0x11c4 <__udivmodhi4_loop>
    11da:	80 95       	com	r24
    11dc:	90 95       	com	r25
    11de:	bc 01       	movw	r22, r24
    11e0:	cd 01       	movw	r24, r26
    11e2:	08 95       	ret

000011e4 <__divmodhi4>:
    11e4:	97 fb       	bst	r25, 7
    11e6:	07 2e       	mov	r0, r23
    11e8:	16 f4       	brtc	.+4      	; 0x11ee <__divmodhi4+0xa>
    11ea:	00 94       	com	r0
    11ec:	07 d0       	rcall	.+14     	; 0x11fc <__divmodhi4_neg1>
    11ee:	77 fd       	sbrc	r23, 7
    11f0:	09 d0       	rcall	.+18     	; 0x1204 <__divmodhi4_neg2>
    11f2:	0e 94 de 08 	call	0x11bc	; 0x11bc <__udivmodhi4>
    11f6:	07 fc       	sbrc	r0, 7
    11f8:	05 d0       	rcall	.+10     	; 0x1204 <__divmodhi4_neg2>
    11fa:	3e f4       	brtc	.+14     	; 0x120a <__divmodhi4_exit>

000011fc <__divmodhi4_neg1>:
    11fc:	90 95       	com	r25
    11fe:	81 95       	neg	r24
    1200:	9f 4f       	sbci	r25, 0xFF	; 255
    1202:	08 95       	ret

00001204 <__divmodhi4_neg2>:
    1204:	70 95       	com	r23
    1206:	61 95       	neg	r22
    1208:	7f 4f       	sbci	r23, 0xFF	; 255

0000120a <__divmodhi4_exit>:
    120a:	08 95       	ret

0000120c <__udivmodsi4>:
    120c:	a1 e2       	ldi	r26, 0x21	; 33
    120e:	1a 2e       	mov	r1, r26
    1210:	aa 1b       	sub	r26, r26
    1212:	bb 1b       	sub	r27, r27
    1214:	fd 01       	movw	r30, r26
    1216:	0d c0       	rjmp	.+26     	; 0x1232 <__udivmodsi4_ep>

00001218 <__udivmodsi4_loop>:
    1218:	aa 1f       	adc	r26, r26
    121a:	bb 1f       	adc	r27, r27
    121c:	ee 1f       	adc	r30, r30
    121e:	ff 1f       	adc	r31, r31
    1220:	a2 17       	cp	r26, r18
    1222:	b3 07       	cpc	r27, r19
    1224:	e4 07       	cpc	r30, r20
    1226:	f5 07       	cpc	r31, r21
    1228:	20 f0       	brcs	.+8      	; 0x1232 <__udivmodsi4_ep>
    122a:	a2 1b       	sub	r26, r18
    122c:	b3 0b       	sbc	r27, r19
    122e:	e4 0b       	sbc	r30, r20
    1230:	f5 0b       	sbc	r31, r21

00001232 <__udivmodsi4_ep>:
    1232:	66 1f       	adc	r22, r22
    1234:	77 1f       	adc	r23, r23
    1236:	88 1f       	adc	r24, r24
    1238:	99 1f       	adc	r25, r25
    123a:	1a 94       	dec	r1
    123c:	69 f7       	brne	.-38     	; 0x1218 <__udivmodsi4_loop>
    123e:	60 95       	com	r22
    1240:	70 95       	com	r23
    1242:	80 95       	com	r24
    1244:	90 95       	com	r25
    1246:	9b 01       	movw	r18, r22
    1248:	ac 01       	movw	r20, r24
    124a:	bd 01       	movw	r22, r26
    124c:	cf 01       	movw	r24, r30
    124e:	08 95       	ret

00001250 <__divmodsi4>:
    1250:	05 2e       	mov	r0, r21
    1252:	97 fb       	bst	r25, 7
    1254:	16 f4       	brtc	.+4      	; 0x125a <__divmodsi4+0xa>
    1256:	00 94       	com	r0
    1258:	07 d0       	rcall	.+14     	; 0x1268 <__divmodsi4_neg1>
    125a:	57 fd       	sbrc	r21, 7
    125c:	0d d0       	rcall	.+26     	; 0x1278 <__divmodsi4_neg2>
    125e:	0e 94 06 09 	call	0x120c	; 0x120c <__udivmodsi4>
    1262:	07 fc       	sbrc	r0, 7
    1264:	09 d0       	rcall	.+18     	; 0x1278 <__divmodsi4_neg2>
    1266:	7e f4       	brtc	.+30     	; 0x1286 <__divmodsi4_exit>

00001268 <__divmodsi4_neg1>:
    1268:	90 95       	com	r25
    126a:	80 95       	com	r24
    126c:	70 95       	com	r23
    126e:	61 95       	neg	r22
    1270:	7f 4f       	sbci	r23, 0xFF	; 255
    1272:	8f 4f       	sbci	r24, 0xFF	; 255
    1274:	9f 4f       	sbci	r25, 0xFF	; 255
    1276:	08 95       	ret

00001278 <__divmodsi4_neg2>:
    1278:	50 95       	com	r21
    127a:	40 95       	com	r20
    127c:	30 95       	com	r19
    127e:	21 95       	neg	r18
    1280:	3f 4f       	sbci	r19, 0xFF	; 255
    1282:	4f 4f       	sbci	r20, 0xFF	; 255
    1284:	5f 4f       	sbci	r21, 0xFF	; 255

00001286 <__divmodsi4_exit>:
    1286:	08 95       	ret

00001288 <__muluhisi3>:
    1288:	0e 94 86 09 	call	0x130c	; 0x130c <__umulhisi3>
    128c:	a5 9f       	mul	r26, r21
    128e:	90 0d       	add	r25, r0
    1290:	b4 9f       	mul	r27, r20
    1292:	90 0d       	add	r25, r0
    1294:	a4 9f       	mul	r26, r20
    1296:	80 0d       	add	r24, r0
    1298:	91 1d       	adc	r25, r1
    129a:	11 24       	eor	r1, r1
    129c:	08 95       	ret

0000129e <__prologue_saves__>:
    129e:	2f 92       	push	r2
    12a0:	3f 92       	push	r3
    12a2:	4f 92       	push	r4
    12a4:	5f 92       	push	r5
    12a6:	6f 92       	push	r6
    12a8:	7f 92       	push	r7
    12aa:	8f 92       	push	r8
    12ac:	9f 92       	push	r9
    12ae:	af 92       	push	r10
    12b0:	bf 92       	push	r11
    12b2:	cf 92       	push	r12
    12b4:	df 92       	push	r13
    12b6:	ef 92       	push	r14
    12b8:	ff 92       	push	r15
    12ba:	0f 93       	push	r16
    12bc:	1f 93       	push	r17
    12be:	cf 93       	push	r28
    12c0:	df 93       	push	r29
    12c2:	cd b7       	in	r28, 0x3d	; 61
    12c4:	de b7       	in	r29, 0x3e	; 62
    12c6:	ca 1b       	sub	r28, r26
    12c8:	db 0b       	sbc	r29, r27
    12ca:	0f b6       	in	r0, 0x3f	; 63
    12cc:	f8 94       	cli
    12ce:	de bf       	out	0x3e, r29	; 62
    12d0:	0f be       	out	0x3f, r0	; 63
    12d2:	cd bf       	out	0x3d, r28	; 61
    12d4:	09 94       	ijmp

000012d6 <__epilogue_restores__>:
    12d6:	2a 88       	ldd	r2, Y+18	; 0x12
    12d8:	39 88       	ldd	r3, Y+17	; 0x11
    12da:	48 88       	ldd	r4, Y+16	; 0x10
    12dc:	5f 84       	ldd	r5, Y+15	; 0x0f
    12de:	6e 84       	ldd	r6, Y+14	; 0x0e
    12e0:	7d 84       	ldd	r7, Y+13	; 0x0d
    12e2:	8c 84       	ldd	r8, Y+12	; 0x0c
    12e4:	9b 84       	ldd	r9, Y+11	; 0x0b
    12e6:	aa 84       	ldd	r10, Y+10	; 0x0a
    12e8:	b9 84       	ldd	r11, Y+9	; 0x09
    12ea:	c8 84       	ldd	r12, Y+8	; 0x08
    12ec:	df 80       	ldd	r13, Y+7	; 0x07
    12ee:	ee 80       	ldd	r14, Y+6	; 0x06
    12f0:	fd 80       	ldd	r15, Y+5	; 0x05
    12f2:	0c 81       	ldd	r16, Y+4	; 0x04
    12f4:	1b 81       	ldd	r17, Y+3	; 0x03
    12f6:	aa 81       	ldd	r26, Y+2	; 0x02
    12f8:	b9 81       	ldd	r27, Y+1	; 0x01
    12fa:	ce 0f       	add	r28, r30
    12fc:	d1 1d       	adc	r29, r1
    12fe:	0f b6       	in	r0, 0x3f	; 63
    1300:	f8 94       	cli
    1302:	de bf       	out	0x3e, r29	; 62
    1304:	0f be       	out	0x3f, r0	; 63
    1306:	cd bf       	out	0x3d, r28	; 61
    1308:	ed 01       	movw	r28, r26
    130a:	08 95       	ret

0000130c <__umulhisi3>:
    130c:	a2 9f       	mul	r26, r18
    130e:	b0 01       	movw	r22, r0
    1310:	b3 9f       	mul	r27, r19
    1312:	c0 01       	movw	r24, r0
    1314:	a3 9f       	mul	r26, r19
    1316:	01 d0       	rcall	.+2      	; 0x131a <__umulhisi3+0xe>
    1318:	b2 9f       	mul	r27, r18
    131a:	70 0d       	add	r23, r0
    131c:	81 1d       	adc	r24, r1
    131e:	11 24       	eor	r1, r1
    1320:	91 1d       	adc	r25, r1
    1322:	08 95       	ret

00001324 <malloc>:
    1324:	0f 93       	push	r16
    1326:	1f 93       	push	r17
    1328:	cf 93       	push	r28
    132a:	df 93       	push	r29
    132c:	82 30       	cpi	r24, 0x02	; 2
    132e:	91 05       	cpc	r25, r1
    1330:	10 f4       	brcc	.+4      	; 0x1336 <malloc+0x12>
    1332:	82 e0       	ldi	r24, 0x02	; 2
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	e0 91 2d 01 	lds	r30, 0x012D
    133a:	f0 91 2e 01 	lds	r31, 0x012E
    133e:	20 e0       	ldi	r18, 0x00	; 0
    1340:	30 e0       	ldi	r19, 0x00	; 0
    1342:	c0 e0       	ldi	r28, 0x00	; 0
    1344:	d0 e0       	ldi	r29, 0x00	; 0
    1346:	23 c0       	rjmp	.+70     	; 0x138e <malloc+0x6a>
    1348:	40 81       	ld	r20, Z
    134a:	51 81       	ldd	r21, Z+1	; 0x01
    134c:	48 17       	cp	r20, r24
    134e:	59 07       	cpc	r21, r25
    1350:	a8 f0       	brcs	.+42     	; 0x137c <malloc+0x58>
    1352:	48 17       	cp	r20, r24
    1354:	59 07       	cpc	r21, r25
    1356:	61 f4       	brne	.+24     	; 0x1370 <malloc+0x4c>
    1358:	82 81       	ldd	r24, Z+2	; 0x02
    135a:	93 81       	ldd	r25, Z+3	; 0x03
    135c:	20 97       	sbiw	r28, 0x00	; 0
    135e:	19 f0       	breq	.+6      	; 0x1366 <malloc+0x42>
    1360:	9b 83       	std	Y+3, r25	; 0x03
    1362:	8a 83       	std	Y+2, r24	; 0x02
    1364:	2e c0       	rjmp	.+92     	; 0x13c2 <malloc+0x9e>
    1366:	90 93 2e 01 	sts	0x012E, r25
    136a:	80 93 2d 01 	sts	0x012D, r24
    136e:	29 c0       	rjmp	.+82     	; 0x13c2 <malloc+0x9e>
    1370:	21 15       	cp	r18, r1
    1372:	31 05       	cpc	r19, r1
    1374:	29 f0       	breq	.+10     	; 0x1380 <malloc+0x5c>
    1376:	42 17       	cp	r20, r18
    1378:	53 07       	cpc	r21, r19
    137a:	10 f0       	brcs	.+4      	; 0x1380 <malloc+0x5c>
    137c:	a9 01       	movw	r20, r18
    137e:	02 c0       	rjmp	.+4      	; 0x1384 <malloc+0x60>
    1380:	be 01       	movw	r22, r28
    1382:	df 01       	movw	r26, r30
    1384:	02 81       	ldd	r16, Z+2	; 0x02
    1386:	13 81       	ldd	r17, Z+3	; 0x03
    1388:	ef 01       	movw	r28, r30
    138a:	9a 01       	movw	r18, r20
    138c:	f8 01       	movw	r30, r16
    138e:	30 97       	sbiw	r30, 0x00	; 0
    1390:	d9 f6       	brne	.-74     	; 0x1348 <malloc+0x24>
    1392:	21 15       	cp	r18, r1
    1394:	31 05       	cpc	r19, r1
    1396:	09 f1       	breq	.+66     	; 0x13da <malloc+0xb6>
    1398:	28 1b       	sub	r18, r24
    139a:	39 0b       	sbc	r19, r25
    139c:	24 30       	cpi	r18, 0x04	; 4
    139e:	31 05       	cpc	r19, r1
    13a0:	90 f4       	brcc	.+36     	; 0x13c6 <malloc+0xa2>
    13a2:	12 96       	adiw	r26, 0x02	; 2
    13a4:	8d 91       	ld	r24, X+
    13a6:	9c 91       	ld	r25, X
    13a8:	13 97       	sbiw	r26, 0x03	; 3
    13aa:	61 15       	cp	r22, r1
    13ac:	71 05       	cpc	r23, r1
    13ae:	21 f0       	breq	.+8      	; 0x13b8 <malloc+0x94>
    13b0:	fb 01       	movw	r30, r22
    13b2:	93 83       	std	Z+3, r25	; 0x03
    13b4:	82 83       	std	Z+2, r24	; 0x02
    13b6:	04 c0       	rjmp	.+8      	; 0x13c0 <malloc+0x9c>
    13b8:	90 93 2e 01 	sts	0x012E, r25
    13bc:	80 93 2d 01 	sts	0x012D, r24
    13c0:	fd 01       	movw	r30, r26
    13c2:	32 96       	adiw	r30, 0x02	; 2
    13c4:	44 c0       	rjmp	.+136    	; 0x144e <malloc+0x12a>
    13c6:	fd 01       	movw	r30, r26
    13c8:	e2 0f       	add	r30, r18
    13ca:	f3 1f       	adc	r31, r19
    13cc:	81 93       	st	Z+, r24
    13ce:	91 93       	st	Z+, r25
    13d0:	22 50       	subi	r18, 0x02	; 2
    13d2:	31 09       	sbc	r19, r1
    13d4:	2d 93       	st	X+, r18
    13d6:	3c 93       	st	X, r19
    13d8:	3a c0       	rjmp	.+116    	; 0x144e <malloc+0x12a>
    13da:	20 91 2b 01 	lds	r18, 0x012B
    13de:	30 91 2c 01 	lds	r19, 0x012C
    13e2:	23 2b       	or	r18, r19
    13e4:	41 f4       	brne	.+16     	; 0x13f6 <malloc+0xd2>
    13e6:	20 91 02 01 	lds	r18, 0x0102
    13ea:	30 91 03 01 	lds	r19, 0x0103
    13ee:	30 93 2c 01 	sts	0x012C, r19
    13f2:	20 93 2b 01 	sts	0x012B, r18
    13f6:	20 91 00 01 	lds	r18, 0x0100
    13fa:	30 91 01 01 	lds	r19, 0x0101
    13fe:	21 15       	cp	r18, r1
    1400:	31 05       	cpc	r19, r1
    1402:	41 f4       	brne	.+16     	; 0x1414 <malloc+0xf0>
    1404:	2d b7       	in	r18, 0x3d	; 61
    1406:	3e b7       	in	r19, 0x3e	; 62
    1408:	40 91 04 01 	lds	r20, 0x0104
    140c:	50 91 05 01 	lds	r21, 0x0105
    1410:	24 1b       	sub	r18, r20
    1412:	35 0b       	sbc	r19, r21
    1414:	e0 91 2b 01 	lds	r30, 0x012B
    1418:	f0 91 2c 01 	lds	r31, 0x012C
    141c:	e2 17       	cp	r30, r18
    141e:	f3 07       	cpc	r31, r19
    1420:	a0 f4       	brcc	.+40     	; 0x144a <malloc+0x126>
    1422:	2e 1b       	sub	r18, r30
    1424:	3f 0b       	sbc	r19, r31
    1426:	28 17       	cp	r18, r24
    1428:	39 07       	cpc	r19, r25
    142a:	78 f0       	brcs	.+30     	; 0x144a <malloc+0x126>
    142c:	ac 01       	movw	r20, r24
    142e:	4e 5f       	subi	r20, 0xFE	; 254
    1430:	5f 4f       	sbci	r21, 0xFF	; 255
    1432:	24 17       	cp	r18, r20
    1434:	35 07       	cpc	r19, r21
    1436:	48 f0       	brcs	.+18     	; 0x144a <malloc+0x126>
    1438:	4e 0f       	add	r20, r30
    143a:	5f 1f       	adc	r21, r31
    143c:	50 93 2c 01 	sts	0x012C, r21
    1440:	40 93 2b 01 	sts	0x012B, r20
    1444:	81 93       	st	Z+, r24
    1446:	91 93       	st	Z+, r25
    1448:	02 c0       	rjmp	.+4      	; 0x144e <malloc+0x12a>
    144a:	e0 e0       	ldi	r30, 0x00	; 0
    144c:	f0 e0       	ldi	r31, 0x00	; 0
    144e:	cf 01       	movw	r24, r30
    1450:	df 91       	pop	r29
    1452:	cf 91       	pop	r28
    1454:	1f 91       	pop	r17
    1456:	0f 91       	pop	r16
    1458:	08 95       	ret

0000145a <free>:
    145a:	ef 92       	push	r14
    145c:	ff 92       	push	r15
    145e:	0f 93       	push	r16
    1460:	1f 93       	push	r17
    1462:	cf 93       	push	r28
    1464:	df 93       	push	r29
    1466:	00 97       	sbiw	r24, 0x00	; 0
    1468:	09 f4       	brne	.+2      	; 0x146c <free+0x12>
    146a:	8f c0       	rjmp	.+286    	; 0x158a <free+0x130>
    146c:	dc 01       	movw	r26, r24
    146e:	12 97       	sbiw	r26, 0x02	; 2
    1470:	13 96       	adiw	r26, 0x03	; 3
    1472:	1c 92       	st	X, r1
    1474:	1e 92       	st	-X, r1
    1476:	12 97       	sbiw	r26, 0x02	; 2
    1478:	e0 90 2d 01 	lds	r14, 0x012D
    147c:	f0 90 2e 01 	lds	r15, 0x012E
    1480:	e1 14       	cp	r14, r1
    1482:	f1 04       	cpc	r15, r1
    1484:	89 f4       	brne	.+34     	; 0x14a8 <free+0x4e>
    1486:	2d 91       	ld	r18, X+
    1488:	3c 91       	ld	r19, X
    148a:	11 97       	sbiw	r26, 0x01	; 1
    148c:	28 0f       	add	r18, r24
    148e:	39 1f       	adc	r19, r25
    1490:	80 91 2b 01 	lds	r24, 0x012B
    1494:	90 91 2c 01 	lds	r25, 0x012C
    1498:	82 17       	cp	r24, r18
    149a:	93 07       	cpc	r25, r19
    149c:	89 f5       	brne	.+98     	; 0x1500 <free+0xa6>
    149e:	b0 93 2c 01 	sts	0x012C, r27
    14a2:	a0 93 2b 01 	sts	0x012B, r26
    14a6:	71 c0       	rjmp	.+226    	; 0x158a <free+0x130>
    14a8:	e7 01       	movw	r28, r14
    14aa:	20 e0       	ldi	r18, 0x00	; 0
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	01 c0       	rjmp	.+2      	; 0x14b2 <free+0x58>
    14b0:	ea 01       	movw	r28, r20
    14b2:	ca 17       	cp	r28, r26
    14b4:	db 07       	cpc	r29, r27
    14b6:	38 f4       	brcc	.+14     	; 0x14c6 <free+0x6c>
    14b8:	4a 81       	ldd	r20, Y+2	; 0x02
    14ba:	5b 81       	ldd	r21, Y+3	; 0x03
    14bc:	9e 01       	movw	r18, r28
    14be:	41 15       	cp	r20, r1
    14c0:	51 05       	cpc	r21, r1
    14c2:	b1 f7       	brne	.-20     	; 0x14b0 <free+0x56>
    14c4:	22 c0       	rjmp	.+68     	; 0x150a <free+0xb0>
    14c6:	bc 01       	movw	r22, r24
    14c8:	62 50       	subi	r22, 0x02	; 2
    14ca:	71 09       	sbc	r23, r1
    14cc:	fb 01       	movw	r30, r22
    14ce:	d3 83       	std	Z+3, r29	; 0x03
    14d0:	c2 83       	std	Z+2, r28	; 0x02
    14d2:	00 81       	ld	r16, Z
    14d4:	11 81       	ldd	r17, Z+1	; 0x01
    14d6:	ac 01       	movw	r20, r24
    14d8:	40 0f       	add	r20, r16
    14da:	51 1f       	adc	r21, r17
    14dc:	4c 17       	cp	r20, r28
    14de:	5d 07       	cpc	r21, r29
    14e0:	61 f4       	brne	.+24     	; 0x14fa <free+0xa0>
    14e2:	48 81       	ld	r20, Y
    14e4:	59 81       	ldd	r21, Y+1	; 0x01
    14e6:	40 0f       	add	r20, r16
    14e8:	51 1f       	adc	r21, r17
    14ea:	4e 5f       	subi	r20, 0xFE	; 254
    14ec:	5f 4f       	sbci	r21, 0xFF	; 255
    14ee:	51 83       	std	Z+1, r21	; 0x01
    14f0:	40 83       	st	Z, r20
    14f2:	4a 81       	ldd	r20, Y+2	; 0x02
    14f4:	5b 81       	ldd	r21, Y+3	; 0x03
    14f6:	53 83       	std	Z+3, r21	; 0x03
    14f8:	42 83       	std	Z+2, r20	; 0x02
    14fa:	21 15       	cp	r18, r1
    14fc:	31 05       	cpc	r19, r1
    14fe:	29 f4       	brne	.+10     	; 0x150a <free+0xb0>
    1500:	b0 93 2e 01 	sts	0x012E, r27
    1504:	a0 93 2d 01 	sts	0x012D, r26
    1508:	40 c0       	rjmp	.+128    	; 0x158a <free+0x130>
    150a:	f9 01       	movw	r30, r18
    150c:	b3 83       	std	Z+3, r27	; 0x03
    150e:	a2 83       	std	Z+2, r26	; 0x02
    1510:	e9 01       	movw	r28, r18
    1512:	69 91       	ld	r22, Y+
    1514:	79 91       	ld	r23, Y+
    1516:	c6 0f       	add	r28, r22
    1518:	d7 1f       	adc	r29, r23
    151a:	ac 17       	cp	r26, r28
    151c:	bd 07       	cpc	r27, r29
    151e:	79 f4       	brne	.+30     	; 0x153e <free+0xe4>
    1520:	dc 01       	movw	r26, r24
    1522:	5e 91       	ld	r21, -X
    1524:	4e 91       	ld	r20, -X
    1526:	46 0f       	add	r20, r22
    1528:	57 1f       	adc	r21, r23
    152a:	4e 5f       	subi	r20, 0xFE	; 254
    152c:	5f 4f       	sbci	r21, 0xFF	; 255
    152e:	51 83       	std	Z+1, r21	; 0x01
    1530:	40 83       	st	Z, r20
    1532:	12 96       	adiw	r26, 0x02	; 2
    1534:	8d 91       	ld	r24, X+
    1536:	9c 91       	ld	r25, X
    1538:	13 97       	sbiw	r26, 0x03	; 3
    153a:	93 83       	std	Z+3, r25	; 0x03
    153c:	82 83       	std	Z+2, r24	; 0x02
    153e:	a0 e0       	ldi	r26, 0x00	; 0
    1540:	b0 e0       	ldi	r27, 0x00	; 0
    1542:	02 c0       	rjmp	.+4      	; 0x1548 <free+0xee>
    1544:	d7 01       	movw	r26, r14
    1546:	7c 01       	movw	r14, r24
    1548:	f7 01       	movw	r30, r14
    154a:	82 81       	ldd	r24, Z+2	; 0x02
    154c:	93 81       	ldd	r25, Z+3	; 0x03
    154e:	00 97       	sbiw	r24, 0x00	; 0
    1550:	c9 f7       	brne	.-14     	; 0x1544 <free+0xea>
    1552:	c7 01       	movw	r24, r14
    1554:	02 96       	adiw	r24, 0x02	; 2
    1556:	20 81       	ld	r18, Z
    1558:	31 81       	ldd	r19, Z+1	; 0x01
    155a:	82 0f       	add	r24, r18
    155c:	93 1f       	adc	r25, r19
    155e:	20 91 2b 01 	lds	r18, 0x012B
    1562:	30 91 2c 01 	lds	r19, 0x012C
    1566:	28 17       	cp	r18, r24
    1568:	39 07       	cpc	r19, r25
    156a:	79 f4       	brne	.+30     	; 0x158a <free+0x130>
    156c:	10 97       	sbiw	r26, 0x00	; 0
    156e:	29 f4       	brne	.+10     	; 0x157a <free+0x120>
    1570:	10 92 2e 01 	sts	0x012E, r1
    1574:	10 92 2d 01 	sts	0x012D, r1
    1578:	04 c0       	rjmp	.+8      	; 0x1582 <free+0x128>
    157a:	13 96       	adiw	r26, 0x03	; 3
    157c:	1c 92       	st	X, r1
    157e:	1e 92       	st	-X, r1
    1580:	12 97       	sbiw	r26, 0x02	; 2
    1582:	f0 92 2c 01 	sts	0x012C, r15
    1586:	e0 92 2b 01 	sts	0x012B, r14
    158a:	cd b7       	in	r28, 0x3d	; 61
    158c:	de b7       	in	r29, 0x3e	; 62
    158e:	e6 e0       	ldi	r30, 0x06	; 6
    1590:	0c 94 77 09 	jmp	0x12ee	; 0x12ee <__epilogue_restores__+0x18>

00001594 <_exit>:
    1594:	f8 94       	cli

00001596 <__stop_program>:
    1596:	ff cf       	rjmp	.-2      	; 0x1596 <__stop_program>
